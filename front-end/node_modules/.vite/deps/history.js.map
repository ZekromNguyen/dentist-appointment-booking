{
  "version": 3,
  "sources": ["../../history/index.js"],
  "sourcesContent": ["import _extends from '@babel/runtime/helpers/esm/extends';\r\n\r\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\r\nvar Action;\r\n\r\n(function (Action) {\r\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\r\n  Action[\"Pop\"] = \"POP\";\r\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\r\n\r\n  Action[\"Push\"] = \"PUSH\";\r\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\r\n\r\n  Action[\"Replace\"] = \"REPLACE\";\r\n})(Action || (Action = {}));\r\n\r\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\r\n  return Object.freeze(obj);\r\n} : function (obj) {\r\n  return obj;\r\n};\r\n\r\nfunction warning(cond, message) {\r\n  if (!cond) {\r\n    // eslint-disable-next-line no-console\r\n    if (typeof console !== 'undefined') console.warn(message);\r\n\r\n    try {\r\n      // Welcome to debugging history!\r\n      //\r\n      // This error is thrown as a convenience so you can more easily\r\n      // find the source for a warning that appears in the console by\r\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\r\n      throw new Error(message); // eslint-disable-next-line no-empty\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\nvar BeforeUnloadEventType = 'beforeunload';\r\nvar HashChangeEventType = 'hashchange';\r\nvar PopStateEventType = 'popstate';\r\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\r\n\r\nfunction createBrowserHistory(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options = options,\r\n      _options$window = _options.window,\r\n      window = _options$window === void 0 ? document.defaultView : _options$window;\r\n  var globalHistory = window.history;\r\n\r\n  function getIndexAndLocation() {\r\n    var _window$location = window.location,\r\n        pathname = _window$location.pathname,\r\n        search = _window$location.search,\r\n        hash = _window$location.hash;\r\n    var state = globalHistory.state || {};\r\n    return [state.idx, readOnly({\r\n      pathname: pathname,\r\n      search: search,\r\n      hash: hash,\r\n      state: state.usr || null,\r\n      key: state.key || 'default'\r\n    })];\r\n  }\r\n\r\n  var blockedPopTx = null;\r\n\r\n  function handlePop() {\r\n    if (blockedPopTx) {\r\n      blockers.call(blockedPopTx);\r\n      blockedPopTx = null;\r\n    } else {\r\n      var nextAction = Action.Pop;\r\n\r\n      var _getIndexAndLocation = getIndexAndLocation(),\r\n          nextIndex = _getIndexAndLocation[0],\r\n          nextLocation = _getIndexAndLocation[1];\r\n\r\n      if (blockers.length) {\r\n        if (nextIndex != null) {\r\n          var delta = index - nextIndex;\r\n\r\n          if (delta) {\r\n            // Revert the POP\r\n            blockedPopTx = {\r\n              action: nextAction,\r\n              location: nextLocation,\r\n              retry: function retry() {\r\n                go(delta * -1);\r\n              }\r\n            };\r\n            go(delta);\r\n          }\r\n        } else {\r\n          // Trying to POP to a location with no index. We did not create\r\n          // this location, so we can't effectively block the navigation.\r\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\r\n          // detail and link to it here so people can understand better what\r\n          // is going on and how to avoid it.\r\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\r\n        }\r\n      } else {\r\n        applyTx(nextAction);\r\n      }\r\n    }\r\n  }\r\n\r\n  window.addEventListener(PopStateEventType, handlePop);\r\n  var action = Action.Pop;\r\n\r\n  var _getIndexAndLocation2 = getIndexAndLocation(),\r\n      index = _getIndexAndLocation2[0],\r\n      location = _getIndexAndLocation2[1];\r\n\r\n  var listeners = createEvents();\r\n  var blockers = createEvents();\r\n\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\r\n      idx: index\r\n    }), '');\r\n  }\r\n\r\n  function createHref(to) {\r\n    return typeof to === 'string' ? to : createPath(to);\r\n  } // state defaults to `null` because `window.history.state` does\r\n\r\n\r\n  function getNextLocation(to, state) {\r\n    if (state === void 0) {\r\n      state = null;\r\n    }\r\n\r\n    return readOnly(_extends({\r\n      pathname: location.pathname,\r\n      hash: '',\r\n      search: ''\r\n    }, typeof to === 'string' ? parsePath(to) : to, {\r\n      state: state,\r\n      key: createKey()\r\n    }));\r\n  }\r\n\r\n  function getHistoryStateAndUrl(nextLocation, index) {\r\n    return [{\r\n      usr: nextLocation.state,\r\n      key: nextLocation.key,\r\n      idx: index\r\n    }, createHref(nextLocation)];\r\n  }\r\n\r\n  function allowTx(action, location, retry) {\r\n    return !blockers.length || (blockers.call({\r\n      action: action,\r\n      location: location,\r\n      retry: retry\r\n    }), false);\r\n  }\r\n\r\n  function applyTx(nextAction) {\r\n    action = nextAction;\r\n\r\n    var _getIndexAndLocation3 = getIndexAndLocation();\r\n\r\n    index = _getIndexAndLocation3[0];\r\n    location = _getIndexAndLocation3[1];\r\n    listeners.call({\r\n      action: action,\r\n      location: location\r\n    });\r\n  }\r\n\r\n  function push(to, state) {\r\n    var nextAction = Action.Push;\r\n    var nextLocation = getNextLocation(to, state);\r\n\r\n    function retry() {\r\n      push(to, state);\r\n    }\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\r\n          historyState = _getHistoryStateAndUr[0],\r\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\r\n      // try...catch because iOS limits us to 100 pushState calls :/\r\n\r\n\r\n      try {\r\n        globalHistory.pushState(historyState, '', url);\r\n      } catch (error) {\r\n        // They are going to lose state here, but there is no real\r\n        // way to warn them about it since the page will refresh...\r\n        window.location.assign(url);\r\n      }\r\n\r\n      applyTx(nextAction);\r\n    }\r\n  }\r\n\r\n  function replace(to, state) {\r\n    var nextAction = Action.Replace;\r\n    var nextLocation = getNextLocation(to, state);\r\n\r\n    function retry() {\r\n      replace(to, state);\r\n    }\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\r\n          historyState = _getHistoryStateAndUr2[0],\r\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\r\n\r\n\r\n      globalHistory.replaceState(historyState, '', url);\r\n      applyTx(nextAction);\r\n    }\r\n  }\r\n\r\n  function go(delta) {\r\n    globalHistory.go(delta);\r\n  }\r\n\r\n  var history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n\r\n    get location() {\r\n      return location;\r\n    },\r\n\r\n    createHref: createHref,\r\n    push: push,\r\n    replace: replace,\r\n    go: go,\r\n    back: function back() {\r\n      go(-1);\r\n    },\r\n    forward: function forward() {\r\n      go(1);\r\n    },\r\n    listen: function listen(listener) {\r\n      return listeners.push(listener);\r\n    },\r\n    block: function block(blocker) {\r\n      var unblock = blockers.push(blocker);\r\n\r\n      if (blockers.length === 1) {\r\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\r\n      }\r\n\r\n      return function () {\r\n        unblock(); // Remove the beforeunload listener so the document may\r\n        // still be salvageable in the pagehide event.\r\n        // See https://html.spec.whatwg.org/#unloading-documents\r\n\r\n        if (!blockers.length) {\r\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\r\n        }\r\n      };\r\n    }\r\n  };\r\n  return history;\r\n}\r\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\r\n\r\nfunction createHashHistory(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options2 = options,\r\n      _options2$window = _options2.window,\r\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\r\n  var globalHistory = window.history;\r\n\r\n  function getIndexAndLocation() {\r\n    var _parsePath = parsePath(window.location.hash.substr(1)),\r\n        _parsePath$pathname = _parsePath.pathname,\r\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\r\n        _parsePath$search = _parsePath.search,\r\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\r\n        _parsePath$hash = _parsePath.hash,\r\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\r\n\r\n    var state = globalHistory.state || {};\r\n    return [state.idx, readOnly({\r\n      pathname: pathname,\r\n      search: search,\r\n      hash: hash,\r\n      state: state.usr || null,\r\n      key: state.key || 'default'\r\n    })];\r\n  }\r\n\r\n  var blockedPopTx = null;\r\n\r\n  function handlePop() {\r\n    if (blockedPopTx) {\r\n      blockers.call(blockedPopTx);\r\n      blockedPopTx = null;\r\n    } else {\r\n      var nextAction = Action.Pop;\r\n\r\n      var _getIndexAndLocation4 = getIndexAndLocation(),\r\n          nextIndex = _getIndexAndLocation4[0],\r\n          nextLocation = _getIndexAndLocation4[1];\r\n\r\n      if (blockers.length) {\r\n        if (nextIndex != null) {\r\n          var delta = index - nextIndex;\r\n\r\n          if (delta) {\r\n            // Revert the POP\r\n            blockedPopTx = {\r\n              action: nextAction,\r\n              location: nextLocation,\r\n              retry: function retry() {\r\n                go(delta * -1);\r\n              }\r\n            };\r\n            go(delta);\r\n          }\r\n        } else {\r\n          // Trying to POP to a location with no index. We did not create\r\n          // this location, so we can't effectively block the navigation.\r\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\r\n          // detail and link to it here so people can understand better\r\n          // what is going on and how to avoid it.\r\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\r\n        }\r\n      } else {\r\n        applyTx(nextAction);\r\n      }\r\n    }\r\n  }\r\n\r\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\r\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\r\n\r\n  window.addEventListener(HashChangeEventType, function () {\r\n    var _getIndexAndLocation5 = getIndexAndLocation(),\r\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\r\n\r\n\r\n    if (createPath(nextLocation) !== createPath(location)) {\r\n      handlePop();\r\n    }\r\n  });\r\n  var action = Action.Pop;\r\n\r\n  var _getIndexAndLocation6 = getIndexAndLocation(),\r\n      index = _getIndexAndLocation6[0],\r\n      location = _getIndexAndLocation6[1];\r\n\r\n  var listeners = createEvents();\r\n  var blockers = createEvents();\r\n\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\r\n      idx: index\r\n    }), '');\r\n  }\r\n\r\n  function getBaseHref() {\r\n    var base = document.querySelector('base');\r\n    var href = '';\r\n\r\n    if (base && base.getAttribute('href')) {\r\n      var url = window.location.href;\r\n      var hashIndex = url.indexOf('#');\r\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\r\n    }\r\n\r\n    return href;\r\n  }\r\n\r\n  function createHref(to) {\r\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\r\n  }\r\n\r\n  function getNextLocation(to, state) {\r\n    if (state === void 0) {\r\n      state = null;\r\n    }\r\n\r\n    return readOnly(_extends({\r\n      pathname: location.pathname,\r\n      hash: '',\r\n      search: ''\r\n    }, typeof to === 'string' ? parsePath(to) : to, {\r\n      state: state,\r\n      key: createKey()\r\n    }));\r\n  }\r\n\r\n  function getHistoryStateAndUrl(nextLocation, index) {\r\n    return [{\r\n      usr: nextLocation.state,\r\n      key: nextLocation.key,\r\n      idx: index\r\n    }, createHref(nextLocation)];\r\n  }\r\n\r\n  function allowTx(action, location, retry) {\r\n    return !blockers.length || (blockers.call({\r\n      action: action,\r\n      location: location,\r\n      retry: retry\r\n    }), false);\r\n  }\r\n\r\n  function applyTx(nextAction) {\r\n    action = nextAction;\r\n\r\n    var _getIndexAndLocation7 = getIndexAndLocation();\r\n\r\n    index = _getIndexAndLocation7[0];\r\n    location = _getIndexAndLocation7[1];\r\n    listeners.call({\r\n      action: action,\r\n      location: location\r\n    });\r\n  }\r\n\r\n  function push(to, state) {\r\n    var nextAction = Action.Push;\r\n    var nextLocation = getNextLocation(to, state);\r\n\r\n    function retry() {\r\n      push(to, state);\r\n    }\r\n\r\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\r\n          historyState = _getHistoryStateAndUr3[0],\r\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\r\n      // try...catch because iOS limits us to 100 pushState calls :/\r\n\r\n\r\n      try {\r\n        globalHistory.pushState(historyState, '', url);\r\n      } catch (error) {\r\n        // They are going to lose state here, but there is no real\r\n        // way to warn them about it since the page will refresh...\r\n        window.location.assign(url);\r\n      }\r\n\r\n      applyTx(nextAction);\r\n    }\r\n  }\r\n\r\n  function replace(to, state) {\r\n    var nextAction = Action.Replace;\r\n    var nextLocation = getNextLocation(to, state);\r\n\r\n    function retry() {\r\n      replace(to, state);\r\n    }\r\n\r\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\r\n          historyState = _getHistoryStateAndUr4[0],\r\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\r\n\r\n\r\n      globalHistory.replaceState(historyState, '', url);\r\n      applyTx(nextAction);\r\n    }\r\n  }\r\n\r\n  function go(delta) {\r\n    globalHistory.go(delta);\r\n  }\r\n\r\n  var history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n\r\n    get location() {\r\n      return location;\r\n    },\r\n\r\n    createHref: createHref,\r\n    push: push,\r\n    replace: replace,\r\n    go: go,\r\n    back: function back() {\r\n      go(-1);\r\n    },\r\n    forward: function forward() {\r\n      go(1);\r\n    },\r\n    listen: function listen(listener) {\r\n      return listeners.push(listener);\r\n    },\r\n    block: function block(blocker) {\r\n      var unblock = blockers.push(blocker);\r\n\r\n      if (blockers.length === 1) {\r\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\r\n      }\r\n\r\n      return function () {\r\n        unblock(); // Remove the beforeunload listener so the document may\r\n        // still be salvageable in the pagehide event.\r\n        // See https://html.spec.whatwg.org/#unloading-documents\r\n\r\n        if (!blockers.length) {\r\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\r\n        }\r\n      };\r\n    }\r\n  };\r\n  return history;\r\n}\r\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\r\n\r\nfunction createMemoryHistory(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options3 = options,\r\n      _options3$initialEntr = _options3.initialEntries,\r\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\r\n      initialIndex = _options3.initialIndex;\r\n  var entries = initialEntries.map(function (entry) {\r\n    var location = readOnly(_extends({\r\n      pathname: '/',\r\n      search: '',\r\n      hash: '',\r\n      state: null,\r\n      key: createKey()\r\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\r\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\r\n    return location;\r\n  });\r\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\r\n  var action = Action.Pop;\r\n  var location = entries[index];\r\n  var listeners = createEvents();\r\n  var blockers = createEvents();\r\n\r\n  function createHref(to) {\r\n    return typeof to === 'string' ? to : createPath(to);\r\n  }\r\n\r\n  function getNextLocation(to, state) {\r\n    if (state === void 0) {\r\n      state = null;\r\n    }\r\n\r\n    return readOnly(_extends({\r\n      pathname: location.pathname,\r\n      search: '',\r\n      hash: ''\r\n    }, typeof to === 'string' ? parsePath(to) : to, {\r\n      state: state,\r\n      key: createKey()\r\n    }));\r\n  }\r\n\r\n  function allowTx(action, location, retry) {\r\n    return !blockers.length || (blockers.call({\r\n      action: action,\r\n      location: location,\r\n      retry: retry\r\n    }), false);\r\n  }\r\n\r\n  function applyTx(nextAction, nextLocation) {\r\n    action = nextAction;\r\n    location = nextLocation;\r\n    listeners.call({\r\n      action: action,\r\n      location: location\r\n    });\r\n  }\r\n\r\n  function push(to, state) {\r\n    var nextAction = Action.Push;\r\n    var nextLocation = getNextLocation(to, state);\r\n\r\n    function retry() {\r\n      push(to, state);\r\n    }\r\n\r\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      index += 1;\r\n      entries.splice(index, entries.length, nextLocation);\r\n      applyTx(nextAction, nextLocation);\r\n    }\r\n  }\r\n\r\n  function replace(to, state) {\r\n    var nextAction = Action.Replace;\r\n    var nextLocation = getNextLocation(to, state);\r\n\r\n    function retry() {\r\n      replace(to, state);\r\n    }\r\n\r\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      entries[index] = nextLocation;\r\n      applyTx(nextAction, nextLocation);\r\n    }\r\n  }\r\n\r\n  function go(delta) {\r\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\r\n    var nextAction = Action.Pop;\r\n    var nextLocation = entries[nextIndex];\r\n\r\n    function retry() {\r\n      go(delta);\r\n    }\r\n\r\n    if (allowTx(nextAction, nextLocation, retry)) {\r\n      index = nextIndex;\r\n      applyTx(nextAction, nextLocation);\r\n    }\r\n  }\r\n\r\n  var history = {\r\n    get index() {\r\n      return index;\r\n    },\r\n\r\n    get action() {\r\n      return action;\r\n    },\r\n\r\n    get location() {\r\n      return location;\r\n    },\r\n\r\n    createHref: createHref,\r\n    push: push,\r\n    replace: replace,\r\n    go: go,\r\n    back: function back() {\r\n      go(-1);\r\n    },\r\n    forward: function forward() {\r\n      go(1);\r\n    },\r\n    listen: function listen(listener) {\r\n      return listeners.push(listener);\r\n    },\r\n    block: function block(blocker) {\r\n      return blockers.push(blocker);\r\n    }\r\n  };\r\n  return history;\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n// UTILS\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction clamp(n, lowerBound, upperBound) {\r\n  return Math.min(Math.max(n, lowerBound), upperBound);\r\n}\r\n\r\nfunction promptBeforeUnload(event) {\r\n  // Cancel the event.\r\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\r\n\r\n  event.returnValue = '';\r\n}\r\n\r\nfunction createEvents() {\r\n  var handlers = [];\r\n  return {\r\n    get length() {\r\n      return handlers.length;\r\n    },\r\n\r\n    push: function push(fn) {\r\n      handlers.push(fn);\r\n      return function () {\r\n        handlers = handlers.filter(function (handler) {\r\n          return handler !== fn;\r\n        });\r\n      };\r\n    },\r\n    call: function call(arg) {\r\n      handlers.forEach(function (fn) {\r\n        return fn && fn(arg);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nfunction createKey() {\r\n  return Math.random().toString(36).substr(2, 8);\r\n}\r\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\r\n\r\n\r\nfunction createPath(_ref) {\r\n  var _ref$pathname = _ref.pathname,\r\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\r\n      _ref$search = _ref.search,\r\n      search = _ref$search === void 0 ? '' : _ref$search,\r\n      _ref$hash = _ref.hash,\r\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\r\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\r\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\r\n  return pathname;\r\n}\r\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\r\n\r\nfunction parsePath(path) {\r\n  var parsedPath = {};\r\n\r\n  if (path) {\r\n    var hashIndex = path.indexOf('#');\r\n\r\n    if (hashIndex >= 0) {\r\n      parsedPath.hash = path.substr(hashIndex);\r\n      path = path.substr(0, hashIndex);\r\n    }\r\n\r\n    var searchIndex = path.indexOf('?');\r\n\r\n    if (searchIndex >= 0) {\r\n      parsedPath.search = path.substr(searchIndex);\r\n      path = path.substr(0, searchIndex);\r\n    }\r\n\r\n    if (path) {\r\n      parsedPath.pathname = path;\r\n    }\r\n  }\r\n\r\n  return parsedPath;\r\n}\r\n\r\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\r\n//# sourceMappingURL=index.js.map\r\n"],
  "mappings": "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",
  "names": ["Action", "index", "action", "location"]
}
