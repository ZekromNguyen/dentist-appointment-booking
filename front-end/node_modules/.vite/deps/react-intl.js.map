{
  "version": 3,
  "sources": ["../../react-intl/lib/src/components/createFormattedComponent.js", "../../react-intl/lib/src/components/useIntl.js", "../../react-intl/lib/src/components/injectIntl.js", "../../react-intl/lib/src/utils.js", "../../@formatjs/intl/lib/src/utils.js", "../../intl-messageformat/lib/src/core.js", "../../@formatjs/icu-messageformat-parser/lib/index.js", "../../@formatjs/icu-messageformat-parser/lib/error.js", "../../@formatjs/icu-messageformat-parser/lib/parser.js", "../../@formatjs/icu-messageformat-parser/lib/types.js", "../../@formatjs/icu-messageformat-parser/lib/regex.generated.js", "../../@formatjs/icu-skeleton-parser/lib/date-time.js", "../../@formatjs/icu-skeleton-parser/lib/number.js", "../../@formatjs/icu-skeleton-parser/lib/regex.generated.js", "../../@formatjs/icu-messageformat-parser/lib/time-data.generated.js", "../../@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js", "../../@formatjs/fast-memoize/lib/index.js", "../../intl-messageformat/lib/src/error.js", "../../intl-messageformat/lib/src/formatters.js", "../../@formatjs/intl/lib/src/error.js", "../../@formatjs/intl/lib/src/message.js", "../../@formatjs/intl/lib/src/dateTime.js", "../../@formatjs/intl/lib/src/displayName.js", "../../@formatjs/intl/lib/src/list.js", "../../@formatjs/intl/lib/src/plural.js", "../../@formatjs/intl/lib/src/relativeTime.js", "../../@formatjs/intl/lib/src/number.js", "../../@formatjs/intl/lib/src/create-intl.js", "../../react-intl/lib/src/components/provider.js", "../../react-intl/lib/src/components/createIntl.js", "../../react-intl/lib/src/components/relative.js", "../../react-intl/lib/src/components/plural.js", "../../react-intl/lib/src/components/message.js", "../../react-intl/lib/src/components/dateTimeRange.js", "../../react-intl/lib/index.js"],
  "sourcesContent": ["import { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nvar DisplayName;\r\n(function (DisplayName) {\r\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\r\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\r\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\r\n    DisplayName[\"formatList\"] = \"FormattedList\";\r\n    // Note that this DisplayName is the locale display name, not to be confused with\r\n    // the name of the enum, which is for React component display name in dev tools.\r\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\r\n})(DisplayName || (DisplayName = {}));\r\nvar DisplayNameParts;\r\n(function (DisplayNameParts) {\r\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\r\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\r\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\r\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\r\n})(DisplayNameParts || (DisplayNameParts = {}));\r\nexport var FormattedNumberParts = function (props) {\r\n    var intl = useIntl();\r\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\r\n    return children(intl.formatNumberToParts(value, formatProps));\r\n};\r\nFormattedNumberParts.displayName = 'FormattedNumberParts';\r\nexport var FormattedListParts = function (props) {\r\n    var intl = useIntl();\r\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\r\n    return children(intl.formatListToParts(value, formatProps));\r\n};\r\nFormattedNumberParts.displayName = 'FormattedNumberParts';\r\nexport function createFormattedDateTimePartsComponent(name) {\r\n    var ComponentParts = function (props) {\r\n        var intl = useIntl();\r\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\r\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\r\n        var formattedParts = name === 'formatDate'\r\n            ? intl.formatDateToParts(date, formatProps)\r\n            : intl.formatTimeToParts(date, formatProps);\r\n        return children(formattedParts);\r\n    };\r\n    ComponentParts.displayName = DisplayNameParts[name];\r\n    return ComponentParts;\r\n}\r\nexport function createFormattedComponent(name) {\r\n    var Component = function (props) {\r\n        var intl = useIntl();\r\n        var value = props.value, children = props.children, formatProps = __rest(props\r\n        // TODO: fix TS type definition for localeMatcher upstream\r\n        , [\"value\", \"children\"]);\r\n        // TODO: fix TS type definition for localeMatcher upstream\r\n        var formattedValue = intl[name](value, formatProps);\r\n        if (typeof children === 'function') {\r\n            return children(formattedValue);\r\n        }\r\n        var Text = intl.textComponent || React.Fragment;\r\n        return React.createElement(Text, null, formattedValue);\r\n    };\r\n    Component.displayName = DisplayName[name];\r\n    return Component;\r\n}\r\n", "import * as React from 'react';\r\nimport { Context } from './injectIntl';\r\nimport { invariantIntlContext } from '../utils';\r\nexport default function useIntl() {\r\n    var intl = React.useContext(Context);\r\n    invariantIntlContext(intl);\r\n    return intl;\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport * as React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { invariantIntlContext } from '../utils';\r\nfunction getDisplayName(Component) {\r\n    return Component.displayName || Component.name || 'Component';\r\n}\r\n// This is primarily dealing with packaging systems where multiple copies of react-intl\r\n// might exist\r\nvar IntlContext = typeof window !== 'undefined' && !window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__\r\n    ? window.__REACT_INTL_CONTEXT__ ||\r\n        (window.__REACT_INTL_CONTEXT__ = React.createContext(null))\r\n    : React.createContext(null);\r\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\r\nexport var Provider = IntlProvider;\r\nexport var Context = IntlContext;\r\nexport default function injectIntl(WrappedComponent, options) {\r\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\r\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\r\n        var _a;\r\n        if (enforceContext) {\r\n            invariantIntlContext(intl);\r\n        }\r\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\r\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\r\n    })); };\r\n    WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\r\n    WithIntl.WrappedComponent = WrappedComponent;\r\n    if (forwardRef) {\r\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\r\n    }\r\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport * as React from 'react';\r\nimport { invariant } from '@formatjs/ecma402-abstract';\r\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\r\nexport function invariantIntlContext(intl) {\r\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\r\n        '<IntlProvider> needs to exist in the component ancestry.');\r\n}\r\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\r\n/**\r\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\r\n * argument `parts` through, assigning unique key to each part, to prevent\r\n * \"Each child in a list should have a unique \"key\"\" React error.\r\n * @param formatXMLElementFn\r\n */\r\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\r\n    return function (parts) {\r\n        // eslint-disable-next-line prefer-rest-params\r\n        return formatXMLElementFn(React.Children.toArray(parts));\r\n    };\r\n}\r\nexport function shallowEqual(objA, objB) {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n    if (!objA || !objB) {\r\n        return false;\r\n    }\r\n    var aKeys = Object.keys(objA);\r\n    var bKeys = Object.keys(objB);\r\n    var len = aKeys.length;\r\n    if (bKeys.length !== len) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < len; i++) {\r\n        var key = aKeys[i];\r\n        if (objA[key] !== objB[key] ||\r\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n", "import { __assign, __spreadArray } from \"tslib\";\r\nimport { IntlMessageFormat } from 'intl-messageformat';\r\nimport { memoize, strategies } from '@formatjs/fast-memoize';\r\nimport { UnsupportedFormatterError } from './error';\r\nexport function filterProps(props, allowlist, defaults) {\r\n    if (defaults === void 0) { defaults = {}; }\r\n    return allowlist.reduce(function (filtered, name) {\r\n        if (name in props) {\r\n            filtered[name] = props[name];\r\n        }\r\n        else if (name in defaults) {\r\n            filtered[name] = defaults[name];\r\n        }\r\n        return filtered;\r\n    }, {});\r\n}\r\nvar defaultErrorHandler = function (error) {\r\n    // @ts-ignore just so we don't need to declare dep on @types/node\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.error(error);\r\n    }\r\n};\r\nvar defaultWarnHandler = function (warning) {\r\n    // @ts-ignore just so we don't need to declare dep on @types/node\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(warning);\r\n    }\r\n};\r\nexport var DEFAULT_INTL_CONFIG = {\r\n    formats: {},\r\n    messages: {},\r\n    timeZone: undefined,\r\n    defaultLocale: 'en',\r\n    defaultFormats: {},\r\n    fallbackOnEmptyString: true,\r\n    onError: defaultErrorHandler,\r\n    onWarn: defaultWarnHandler,\r\n};\r\nexport function createIntlCache() {\r\n    return {\r\n        dateTime: {},\r\n        number: {},\r\n        message: {},\r\n        relativeTime: {},\r\n        pluralRules: {},\r\n        list: {},\r\n        displayNames: {},\r\n    };\r\n}\r\nfunction createFastMemoizeCache(store) {\r\n    return {\r\n        create: function () {\r\n            return {\r\n                get: function (key) {\r\n                    return store[key];\r\n                },\r\n                set: function (key, value) {\r\n                    store[key] = value;\r\n                },\r\n            };\r\n        },\r\n    };\r\n}\r\n/**\r\n * Create intl formatters and populate cache\r\n * @param cache explicit cache to prevent leaking memory\r\n */\r\nexport function createFormatters(cache) {\r\n    if (cache === void 0) { cache = createIntlCache(); }\r\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\r\n    var ListFormat = Intl.ListFormat;\r\n    var DisplayNames = Intl.DisplayNames;\r\n    var getDateTimeFormat = memoize(function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n    }, {\r\n        cache: createFastMemoizeCache(cache.dateTime),\r\n        strategy: strategies.variadic,\r\n    });\r\n    var getNumberFormat = memoize(function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n    }, {\r\n        cache: createFastMemoizeCache(cache.number),\r\n        strategy: strategies.variadic,\r\n    });\r\n    var getPluralRules = memoize(function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n    }, {\r\n        cache: createFastMemoizeCache(cache.pluralRules),\r\n        strategy: strategies.variadic,\r\n    });\r\n    return {\r\n        getDateTimeFormat: getDateTimeFormat,\r\n        getNumberFormat: getNumberFormat,\r\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\r\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\r\n                    getNumberFormat: getNumberFormat,\r\n                    getDateTimeFormat: getDateTimeFormat,\r\n                    getPluralRules: getPluralRules,\r\n                } }, (opts || {})));\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.message),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getRelativeTimeFormat: memoize(function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.relativeTime),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getPluralRules: getPluralRules,\r\n        getListFormat: memoize(function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.list),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getDisplayNames: memoize(function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.displayNames),\r\n            strategy: strategies.variadic,\r\n        }),\r\n    };\r\n}\r\nexport function getNamedFormat(formats, type, name, onError) {\r\n    var formatType = formats && formats[type];\r\n    var format;\r\n    if (formatType) {\r\n        format = formatType[name];\r\n    }\r\n    if (format) {\r\n        return format;\r\n    }\r\n    onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\r\n}\r\n", "/*\r\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\r\nCopyrights licensed under the New BSD License.\r\nSee the accompanying LICENSE file for terms.\r\n*/\r\nimport { __assign, __rest, __spreadArray } from \"tslib\";\r\nimport { parse, } from '@formatjs/icu-messageformat-parser';\r\nimport { memoize, strategies } from '@formatjs/fast-memoize';\r\nimport { formatToParts, PART_TYPE, } from './formatters';\r\n// -- MessageFormat --------------------------------------------------------\r\nfunction mergeConfig(c1, c2) {\r\n    if (!c2) {\r\n        return c1;\r\n    }\r\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\r\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\r\n        return all;\r\n    }, {}));\r\n}\r\nfunction mergeConfigs(defaultConfig, configs) {\r\n    if (!configs) {\r\n        return defaultConfig;\r\n    }\r\n    return Object.keys(defaultConfig).reduce(function (all, k) {\r\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\r\n        return all;\r\n    }, __assign({}, defaultConfig));\r\n}\r\nfunction createFastMemoizeCache(store) {\r\n    return {\r\n        create: function () {\r\n            return {\r\n                get: function (key) {\r\n                    return store[key];\r\n                },\r\n                set: function (key, value) {\r\n                    store[key] = value;\r\n                },\r\n            };\r\n        },\r\n    };\r\n}\r\nfunction createDefaultFormatters(cache) {\r\n    if (cache === void 0) { cache = {\r\n        number: {},\r\n        dateTime: {},\r\n        pluralRules: {},\r\n    }; }\r\n    return {\r\n        getNumberFormat: memoize(function () {\r\n            var _a;\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.number),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getDateTimeFormat: memoize(function () {\r\n            var _a;\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.dateTime),\r\n            strategy: strategies.variadic,\r\n        }),\r\n        getPluralRules: memoize(function () {\r\n            var _a;\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\r\n        }, {\r\n            cache: createFastMemoizeCache(cache.pluralRules),\r\n            strategy: strategies.variadic,\r\n        }),\r\n    };\r\n}\r\nvar IntlMessageFormat = /** @class */ (function () {\r\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\r\n        var _this = this;\r\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\r\n        this.formatterCache = {\r\n            number: {},\r\n            dateTime: {},\r\n            pluralRules: {},\r\n        };\r\n        this.format = function (values) {\r\n            var parts = _this.formatToParts(values);\r\n            // Hot path for straight simple msg translations\r\n            if (parts.length === 1) {\r\n                return parts[0].value;\r\n            }\r\n            var result = parts.reduce(function (all, part) {\r\n                if (!all.length ||\r\n                    part.type !== PART_TYPE.literal ||\r\n                    typeof all[all.length - 1] !== 'string') {\r\n                    all.push(part.value);\r\n                }\r\n                else {\r\n                    all[all.length - 1] += part.value;\r\n                }\r\n                return all;\r\n            }, []);\r\n            if (result.length <= 1) {\r\n                return result[0] || '';\r\n            }\r\n            return result;\r\n        };\r\n        this.formatToParts = function (values) {\r\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\r\n        };\r\n        this.resolvedOptions = function () {\r\n            var _a;\r\n            return ({\r\n                locale: ((_a = _this.resolvedLocale) === null || _a === void 0 ? void 0 : _a.toString()) ||\r\n                    Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\r\n            });\r\n        };\r\n        this.getAst = function () { return _this.ast; };\r\n        // Defined first because it's used to build the format pattern.\r\n        this.locales = locales;\r\n        this.resolvedLocale = IntlMessageFormat.resolveLocale(locales);\r\n        if (typeof message === 'string') {\r\n            this.message = message;\r\n            if (!IntlMessageFormat.__parse) {\r\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\r\n            }\r\n            var _a = opts || {}, formatters = _a.formatters, parseOpts = __rest(_a, [\"formatters\"]);\r\n            // Parse string messages into an AST.\r\n            this.ast = IntlMessageFormat.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));\r\n        }\r\n        else {\r\n            this.ast = message;\r\n        }\r\n        if (!Array.isArray(this.ast)) {\r\n            throw new TypeError('A message must be provided as a String or AST.');\r\n        }\r\n        // Creates a new object with the specified `formats` merged with the default\r\n        // formats.\r\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\r\n        this.formatters =\r\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\r\n    }\r\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\r\n        get: function () {\r\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\r\n                IntlMessageFormat.memoizedDefaultLocale =\r\n                    new Intl.NumberFormat().resolvedOptions().locale;\r\n            }\r\n            return IntlMessageFormat.memoizedDefaultLocale;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IntlMessageFormat.memoizedDefaultLocale = null;\r\n    IntlMessageFormat.resolveLocale = function (locales) {\r\n        if (typeof Intl.Locale === 'undefined') {\r\n            return;\r\n        }\r\n        var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);\r\n        if (supportedLocales.length > 0) {\r\n            return new Intl.Locale(supportedLocales[0]);\r\n        }\r\n        return new Intl.Locale(typeof locales === 'string' ? locales : locales[0]);\r\n    };\r\n    IntlMessageFormat.__parse = parse;\r\n    // Default format options used as the prototype of the `formats` provided to the\r\n    // constructor. These are used when constructing the internal Intl.NumberFormat\r\n    // and Intl.DateTimeFormat instances.\r\n    IntlMessageFormat.formats = {\r\n        number: {\r\n            integer: {\r\n                maximumFractionDigits: 0,\r\n            },\r\n            currency: {\r\n                style: 'currency',\r\n            },\r\n            percent: {\r\n                style: 'percent',\r\n            },\r\n        },\r\n        date: {\r\n            short: {\r\n                month: 'numeric',\r\n                day: 'numeric',\r\n                year: '2-digit',\r\n            },\r\n            medium: {\r\n                month: 'short',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n            },\r\n            long: {\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n            },\r\n            full: {\r\n                weekday: 'long',\r\n                month: 'long',\r\n                day: 'numeric',\r\n                year: 'numeric',\r\n            },\r\n        },\r\n        time: {\r\n            short: {\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n            },\r\n            medium: {\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n            },\r\n            long: {\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            },\r\n            full: {\r\n                hour: 'numeric',\r\n                minute: 'numeric',\r\n                second: 'numeric',\r\n                timeZoneName: 'short',\r\n            },\r\n        },\r\n    };\r\n    return IntlMessageFormat;\r\n}());\r\nexport { IntlMessageFormat };\r\n", "import { __assign } from \"tslib\";\r\nimport { ErrorKind } from './error';\r\nimport { Parser } from './parser';\r\nimport { isDateElement, isDateTimeSkeleton, isNumberElement, isNumberSkeleton, isPluralElement, isSelectElement, isTagElement, isTimeElement, } from './types';\r\nfunction pruneLocation(els) {\r\n    els.forEach(function (el) {\r\n        delete el.location;\r\n        if (isSelectElement(el) || isPluralElement(el)) {\r\n            for (var k in el.options) {\r\n                delete el.options[k].location;\r\n                pruneLocation(el.options[k].value);\r\n            }\r\n        }\r\n        else if (isNumberElement(el) && isNumberSkeleton(el.style)) {\r\n            delete el.style.location;\r\n        }\r\n        else if ((isDateElement(el) || isTimeElement(el)) &&\r\n            isDateTimeSkeleton(el.style)) {\r\n            delete el.style.location;\r\n        }\r\n        else if (isTagElement(el)) {\r\n            pruneLocation(el.children);\r\n        }\r\n    });\r\n}\r\nexport function parse(message, opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);\r\n    var result = new Parser(message, opts).parse();\r\n    if (result.err) {\r\n        var error = SyntaxError(ErrorKind[result.err.kind]);\r\n        // @ts-expect-error Assign to error object\r\n        error.location = result.err.location;\r\n        // @ts-expect-error Assign to error object\r\n        error.originalMessage = result.err.message;\r\n        throw error;\r\n    }\r\n    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\r\n        pruneLocation(result.val);\r\n    }\r\n    return result.val;\r\n}\r\nexport * from './types';\r\n// only for testing\r\nexport var _Parser = Parser;\r\n", "export var ErrorKind;\r\n(function (ErrorKind) {\r\n    /** Argument is unclosed (e.g. `{0`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\r\n    /** Argument is empty (e.g. `{}`). */\r\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\r\n    /** Argument is malformed (e.g. `{foo!}``) */\r\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\r\n    /** Expect an argument type (e.g. `{foo,}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\r\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\r\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\r\n    /** Expect an argument style (e.g. `{foo, number, }`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\r\n    /** The number skeleton is invalid. */\r\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\r\n    /** The date time skeleton is invalid. */\r\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\r\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\r\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\r\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\r\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\r\n    /** Missing select argument options (e.g. `{foo, select}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\r\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\r\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\r\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\r\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\r\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\r\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\r\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\r\n    /**\r\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\r\n     * (e.g. `{foo, plural, one}`)\r\n     */\r\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\r\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\r\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\r\n    /**\r\n     * Duplicate selectors in `plural` or `selectordinal` argument.\r\n     * (e.g. {foo, plural, one {#} one {#}})\r\n     */\r\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\r\n    /** Duplicate selectors in `select` argument.\r\n     * (e.g. {foo, select, apple {apple} apple {apple}})\r\n     */\r\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\r\n    /** Plural or select argument option must have `other` clause. */\r\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\r\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\r\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\r\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\r\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\r\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\r\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\r\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\r\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\r\n})(ErrorKind || (ErrorKind = {}));\r\n", "var _a;\r\nimport { __assign } from \"tslib\";\r\nimport { ErrorKind } from './error';\r\nimport { SKELETON_TYPE, TYPE, } from './types';\r\nimport { SPACE_SEPARATOR_REGEX } from './regex.generated';\r\nimport { parseNumberSkeleton, parseNumberSkeletonFromString, parseDateTimeSkeleton, } from '@formatjs/icu-skeleton-parser';\r\nimport { getBestPattern } from './date-time-pattern-generator';\r\nvar SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\".concat(SPACE_SEPARATOR_REGEX.source, \"*\"));\r\nvar SPACE_SEPARATOR_END_REGEX = new RegExp(\"\".concat(SPACE_SEPARATOR_REGEX.source, \"*$\"));\r\nfunction createLocation(start, end) {\r\n    return { start: start, end: end };\r\n}\r\n// #region Ponyfills\r\n// Consolidate these variables up top for easier toggling during debugging\r\nvar hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);\r\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\r\nvar hasNativeFromEntries = !!Object.fromEntries;\r\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\r\nvar hasTrimStart = !!String.prototype.trimStart;\r\nvar hasTrimEnd = !!String.prototype.trimEnd;\r\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\r\nvar isSafeInteger = hasNativeIsSafeInteger\r\n    ? Number.isSafeInteger\r\n    : function (n) {\r\n        return (typeof n === 'number' &&\r\n            isFinite(n) &&\r\n            Math.floor(n) === n &&\r\n            Math.abs(n) <= 0x1fffffffffffff);\r\n    };\r\n// IE11 does not support y and u.\r\nvar REGEX_SUPPORTS_U_AND_Y = true;\r\ntry {\r\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\r\n    /**\r\n     * legacy Edge or Xbox One browser\r\n     * Unicode flag support: supported\r\n     * Pattern_Syntax support: not supported\r\n     * See https://github.com/formatjs/formatjs/issues/2822\r\n     */\r\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\r\n}\r\ncatch (_) {\r\n    REGEX_SUPPORTS_U_AND_Y = false;\r\n}\r\nvar startsWith = hasNativeStartsWith\r\n    ? // Native\r\n        function startsWith(s, search, position) {\r\n            return s.startsWith(search, position);\r\n        }\r\n    : // For IE11\r\n        function startsWith(s, search, position) {\r\n            return s.slice(position, position + search.length) === search;\r\n        };\r\nvar fromCodePoint = hasNativeFromCodePoint\r\n    ? String.fromCodePoint\r\n    : // IE11\r\n        function fromCodePoint() {\r\n            var codePoints = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                codePoints[_i] = arguments[_i];\r\n            }\r\n            var elements = '';\r\n            var length = codePoints.length;\r\n            var i = 0;\r\n            var code;\r\n            while (length > i) {\r\n                code = codePoints[i++];\r\n                if (code > 0x10ffff)\r\n                    throw RangeError(code + ' is not a valid code point');\r\n                elements +=\r\n                    code < 0x10000\r\n                        ? String.fromCharCode(code)\r\n                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);\r\n            }\r\n            return elements;\r\n        };\r\nvar fromEntries = \r\n// native\r\nhasNativeFromEntries\r\n    ? Object.fromEntries\r\n    : // Ponyfill\r\n        function fromEntries(entries) {\r\n            var obj = {};\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\r\n                obj[k] = v;\r\n            }\r\n            return obj;\r\n        };\r\nvar codePointAt = hasNativeCodePointAt\r\n    ? // Native\r\n        function codePointAt(s, index) {\r\n            return s.codePointAt(index);\r\n        }\r\n    : // IE 11\r\n        function codePointAt(s, index) {\r\n            var size = s.length;\r\n            if (index < 0 || index >= size) {\r\n                return undefined;\r\n            }\r\n            var first = s.charCodeAt(index);\r\n            var second;\r\n            return first < 0xd800 ||\r\n                first > 0xdbff ||\r\n                index + 1 === size ||\r\n                (second = s.charCodeAt(index + 1)) < 0xdc00 ||\r\n                second > 0xdfff\r\n                ? first\r\n                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;\r\n        };\r\nvar trimStart = hasTrimStart\r\n    ? // Native\r\n        function trimStart(s) {\r\n            return s.trimStart();\r\n        }\r\n    : // Ponyfill\r\n        function trimStart(s) {\r\n            return s.replace(SPACE_SEPARATOR_START_REGEX, '');\r\n        };\r\nvar trimEnd = hasTrimEnd\r\n    ? // Native\r\n        function trimEnd(s) {\r\n            return s.trimEnd();\r\n        }\r\n    : // Ponyfill\r\n        function trimEnd(s) {\r\n            return s.replace(SPACE_SEPARATOR_END_REGEX, '');\r\n        };\r\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\r\nfunction RE(s, flag) {\r\n    return new RegExp(s, flag);\r\n}\r\n// #endregion\r\nvar matchIdentifierAtIndex;\r\nif (REGEX_SUPPORTS_U_AND_Y) {\r\n    // Native\r\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\r\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\r\n        var _a;\r\n        IDENTIFIER_PREFIX_RE_1.lastIndex = index;\r\n        var match = IDENTIFIER_PREFIX_RE_1.exec(s);\r\n        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\r\n    };\r\n}\r\nelse {\r\n    // IE11\r\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\r\n        var match = [];\r\n        while (true) {\r\n            var c = codePointAt(s, index);\r\n            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\r\n                break;\r\n            }\r\n            match.push(c);\r\n            index += c >= 0x10000 ? 2 : 1;\r\n        }\r\n        return fromCodePoint.apply(void 0, match);\r\n    };\r\n}\r\nvar Parser = /** @class */ (function () {\r\n    function Parser(message, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.message = message;\r\n        this.position = { offset: 0, line: 1, column: 1 };\r\n        this.ignoreTag = !!options.ignoreTag;\r\n        this.locale = options.locale;\r\n        this.requiresOtherClause = !!options.requiresOtherClause;\r\n        this.shouldParseSkeletons = !!options.shouldParseSkeletons;\r\n    }\r\n    Parser.prototype.parse = function () {\r\n        if (this.offset() !== 0) {\r\n            throw Error('parser can only be used once');\r\n        }\r\n        return this.parseMessage(0, '', false);\r\n    };\r\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\r\n        var elements = [];\r\n        while (!this.isEOF()) {\r\n            var char = this.char();\r\n            if (char === 123 /* `{` */) {\r\n                var result = this.parseArgument(nestingLevel, expectingCloseTag);\r\n                if (result.err) {\r\n                    return result;\r\n                }\r\n                elements.push(result.val);\r\n            }\r\n            else if (char === 125 /* `}` */ && nestingLevel > 0) {\r\n                break;\r\n            }\r\n            else if (char === 35 /* `#` */ &&\r\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\r\n                var position = this.clonePosition();\r\n                this.bump();\r\n                elements.push({\r\n                    type: TYPE.pound,\r\n                    location: createLocation(position, this.clonePosition()),\r\n                });\r\n            }\r\n            else if (char === 60 /* `<` */ &&\r\n                !this.ignoreTag &&\r\n                this.peek() === 47 // char code for '/'\r\n            ) {\r\n                if (expectingCloseTag) {\r\n                    break;\r\n                }\r\n                else {\r\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\r\n                }\r\n            }\r\n            else if (char === 60 /* `<` */ &&\r\n                !this.ignoreTag &&\r\n                _isAlpha(this.peek() || 0)) {\r\n                var result = this.parseTag(nestingLevel, parentArgType);\r\n                if (result.err) {\r\n                    return result;\r\n                }\r\n                elements.push(result.val);\r\n            }\r\n            else {\r\n                var result = this.parseLiteral(nestingLevel, parentArgType);\r\n                if (result.err) {\r\n                    return result;\r\n                }\r\n                elements.push(result.val);\r\n            }\r\n        }\r\n        return { val: elements, err: null };\r\n    };\r\n    /**\r\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\r\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\r\n     * are accepted:\r\n     *\r\n     * ```\r\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\r\n     * tagName ::= [a-z] (PENChar)*\r\n     * PENChar ::=\r\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\r\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\r\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\r\n     * ```\r\n     *\r\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\r\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\r\n     * since other tag-based engines like React allow it\r\n     */\r\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\r\n        var startPosition = this.clonePosition();\r\n        this.bump(); // `<`\r\n        var tagName = this.parseTagName();\r\n        this.bumpSpace();\r\n        if (this.bumpIf('/>')) {\r\n            // Self closing tag\r\n            return {\r\n                val: {\r\n                    type: TYPE.literal,\r\n                    value: \"<\".concat(tagName, \"/>\"),\r\n                    location: createLocation(startPosition, this.clonePosition()),\r\n                },\r\n                err: null,\r\n            };\r\n        }\r\n        else if (this.bumpIf('>')) {\r\n            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\r\n            if (childrenResult.err) {\r\n                return childrenResult;\r\n            }\r\n            var children = childrenResult.val;\r\n            // Expecting a close tag\r\n            var endTagStartPosition = this.clonePosition();\r\n            if (this.bumpIf('</')) {\r\n                if (this.isEOF() || !_isAlpha(this.char())) {\r\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\r\n                }\r\n                var closingTagNameStartPosition = this.clonePosition();\r\n                var closingTagName = this.parseTagName();\r\n                if (tagName !== closingTagName) {\r\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\r\n                }\r\n                this.bumpSpace();\r\n                if (!this.bumpIf('>')) {\r\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\r\n                }\r\n                return {\r\n                    val: {\r\n                        type: TYPE.tag,\r\n                        value: tagName,\r\n                        children: children,\r\n                        location: createLocation(startPosition, this.clonePosition()),\r\n                    },\r\n                    err: null,\r\n                };\r\n            }\r\n            else {\r\n                return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\r\n            }\r\n        }\r\n        else {\r\n            return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\r\n        }\r\n    };\r\n    /**\r\n     * This method assumes that the caller has peeked ahead for the first tag character.\r\n     */\r\n    Parser.prototype.parseTagName = function () {\r\n        var startOffset = this.offset();\r\n        this.bump(); // the first tag name character\r\n        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\r\n            this.bump();\r\n        }\r\n        return this.message.slice(startOffset, this.offset());\r\n    };\r\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\r\n        var start = this.clonePosition();\r\n        var value = '';\r\n        while (true) {\r\n            var parseQuoteResult = this.tryParseQuote(parentArgType);\r\n            if (parseQuoteResult) {\r\n                value += parseQuoteResult;\r\n                continue;\r\n            }\r\n            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\r\n            if (parseUnquotedResult) {\r\n                value += parseUnquotedResult;\r\n                continue;\r\n            }\r\n            var parseLeftAngleResult = this.tryParseLeftAngleBracket();\r\n            if (parseLeftAngleResult) {\r\n                value += parseLeftAngleResult;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        var location = createLocation(start, this.clonePosition());\r\n        return {\r\n            val: { type: TYPE.literal, value: value, location: location },\r\n            err: null,\r\n        };\r\n    };\r\n    Parser.prototype.tryParseLeftAngleBracket = function () {\r\n        if (!this.isEOF() &&\r\n            this.char() === 60 /* `<` */ &&\r\n            (this.ignoreTag ||\r\n                // If at the opening tag or closing tag position, bail.\r\n                !_isAlphaOrSlash(this.peek() || 0))) {\r\n            this.bump(); // `<`\r\n            return '<';\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\r\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\r\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\r\n     */\r\n    Parser.prototype.tryParseQuote = function (parentArgType) {\r\n        if (this.isEOF() || this.char() !== 39 /* `'` */) {\r\n            return null;\r\n        }\r\n        // Parse escaped char following the apostrophe, or early return if there is no escaped char.\r\n        // Check if is valid escaped character\r\n        switch (this.peek()) {\r\n            case 39 /* `'` */:\r\n                // double quote, should return as a single quote.\r\n                this.bump();\r\n                this.bump();\r\n                return \"'\";\r\n            // '{', '<', '>', '}'\r\n            case 123:\r\n            case 60:\r\n            case 62:\r\n            case 125:\r\n                break;\r\n            case 35: // '#'\r\n                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\r\n                    break;\r\n                }\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n        this.bump(); // apostrophe\r\n        var codePoints = [this.char()]; // escaped char\r\n        this.bump();\r\n        // read chars until the optional closing apostrophe is found\r\n        while (!this.isEOF()) {\r\n            var ch = this.char();\r\n            if (ch === 39 /* `'` */) {\r\n                if (this.peek() === 39 /* `'` */) {\r\n                    codePoints.push(39);\r\n                    // Bump one more time because we need to skip 2 characters.\r\n                    this.bump();\r\n                }\r\n                else {\r\n                    // Optional closing apostrophe.\r\n                    this.bump();\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                codePoints.push(ch);\r\n            }\r\n            this.bump();\r\n        }\r\n        return fromCodePoint.apply(void 0, codePoints);\r\n    };\r\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\r\n        if (this.isEOF()) {\r\n            return null;\r\n        }\r\n        var ch = this.char();\r\n        if (ch === 60 /* `<` */ ||\r\n            ch === 123 /* `{` */ ||\r\n            (ch === 35 /* `#` */ &&\r\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||\r\n            (ch === 125 /* `}` */ && nestingLevel > 0)) {\r\n            return null;\r\n        }\r\n        else {\r\n            this.bump();\r\n            return fromCodePoint(ch);\r\n        }\r\n    };\r\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\r\n        var openingBracePosition = this.clonePosition();\r\n        this.bump(); // `{`\r\n        this.bumpSpace();\r\n        if (this.isEOF()) {\r\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\r\n        }\r\n        if (this.char() === 125 /* `}` */) {\r\n            this.bump();\r\n            return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\r\n        }\r\n        // argument name\r\n        var value = this.parseIdentifierIfPossible().value;\r\n        if (!value) {\r\n            return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\r\n        }\r\n        this.bumpSpace();\r\n        if (this.isEOF()) {\r\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\r\n        }\r\n        switch (this.char()) {\r\n            // Simple argument: `{name}`\r\n            case 125 /* `}` */: {\r\n                this.bump(); // `}`\r\n                return {\r\n                    val: {\r\n                        type: TYPE.argument,\r\n                        // value does not include the opening and closing braces.\r\n                        value: value,\r\n                        location: createLocation(openingBracePosition, this.clonePosition()),\r\n                    },\r\n                    err: null,\r\n                };\r\n            }\r\n            // Argument with options: `{name, format, ...}`\r\n            case 44 /* `,` */: {\r\n                this.bump(); // `,`\r\n                this.bumpSpace();\r\n                if (this.isEOF()) {\r\n                    return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\r\n                }\r\n                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\r\n            }\r\n            default:\r\n                return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\r\n        }\r\n    };\r\n    /**\r\n     * Advance the parser until the end of the identifier, if it is currently on\r\n     * an identifier character. Return an empty string otherwise.\r\n     */\r\n    Parser.prototype.parseIdentifierIfPossible = function () {\r\n        var startingPosition = this.clonePosition();\r\n        var startOffset = this.offset();\r\n        var value = matchIdentifierAtIndex(this.message, startOffset);\r\n        var endOffset = startOffset + value.length;\r\n        this.bumpTo(endOffset);\r\n        var endPosition = this.clonePosition();\r\n        var location = createLocation(startingPosition, endPosition);\r\n        return { value: value, location: location };\r\n    };\r\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\r\n        var _a;\r\n        // Parse this range:\r\n        // {name, type, style}\r\n        //        ^---^\r\n        var typeStartPosition = this.clonePosition();\r\n        var argType = this.parseIdentifierIfPossible().value;\r\n        var typeEndPosition = this.clonePosition();\r\n        switch (argType) {\r\n            case '':\r\n                // Expecting a style string number, date, time, plural, selectordinal, or select.\r\n                return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\r\n            case 'number':\r\n            case 'date':\r\n            case 'time': {\r\n                // Parse this range:\r\n                // {name, number, style}\r\n                //              ^-------^\r\n                this.bumpSpace();\r\n                var styleAndLocation = null;\r\n                if (this.bumpIf(',')) {\r\n                    this.bumpSpace();\r\n                    var styleStartPosition = this.clonePosition();\r\n                    var result = this.parseSimpleArgStyleIfPossible();\r\n                    if (result.err) {\r\n                        return result;\r\n                    }\r\n                    var style = trimEnd(result.val);\r\n                    if (style.length === 0) {\r\n                        return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\r\n                    }\r\n                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());\r\n                    styleAndLocation = { style: style, styleLocation: styleLocation };\r\n                }\r\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\r\n                if (argCloseResult.err) {\r\n                    return argCloseResult;\r\n                }\r\n                var location_1 = createLocation(openingBracePosition, this.clonePosition());\r\n                // Extract style or skeleton\r\n                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\r\n                    // Skeleton starts with `::`.\r\n                    var skeleton = trimStart(styleAndLocation.style.slice(2));\r\n                    if (argType === 'number') {\r\n                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\r\n                        if (result.err) {\r\n                            return result;\r\n                        }\r\n                        return {\r\n                            val: { type: TYPE.number, value: value, location: location_1, style: result.val },\r\n                            err: null,\r\n                        };\r\n                    }\r\n                    else {\r\n                        if (skeleton.length === 0) {\r\n                            return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\r\n                        }\r\n                        var dateTimePattern = skeleton;\r\n                        // Get \"best match\" pattern only if locale is passed, if not, let it\r\n                        // pass as-is where `parseDateTimeSkeleton()` will throw an error\r\n                        // for unsupported patterns.\r\n                        if (this.locale) {\r\n                            dateTimePattern = getBestPattern(skeleton, this.locale);\r\n                        }\r\n                        var style = {\r\n                            type: SKELETON_TYPE.dateTime,\r\n                            pattern: dateTimePattern,\r\n                            location: styleAndLocation.styleLocation,\r\n                            parsedOptions: this.shouldParseSkeletons\r\n                                ? parseDateTimeSkeleton(dateTimePattern)\r\n                                : {},\r\n                        };\r\n                        var type = argType === 'date' ? TYPE.date : TYPE.time;\r\n                        return {\r\n                            val: { type: type, value: value, location: location_1, style: style },\r\n                            err: null,\r\n                        };\r\n                    }\r\n                }\r\n                // Regular style or no style.\r\n                return {\r\n                    val: {\r\n                        type: argType === 'number'\r\n                            ? TYPE.number\r\n                            : argType === 'date'\r\n                                ? TYPE.date\r\n                                : TYPE.time,\r\n                        value: value,\r\n                        location: location_1,\r\n                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,\r\n                    },\r\n                    err: null,\r\n                };\r\n            }\r\n            case 'plural':\r\n            case 'selectordinal':\r\n            case 'select': {\r\n                // Parse this range:\r\n                // {name, plural, options}\r\n                //              ^---------^\r\n                var typeEndPosition_1 = this.clonePosition();\r\n                this.bumpSpace();\r\n                if (!this.bumpIf(',')) {\r\n                    return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));\r\n                }\r\n                this.bumpSpace();\r\n                // Parse offset:\r\n                // {name, plural, offset:1, options}\r\n                //                ^-----^\r\n                //\r\n                // or the first option:\r\n                //\r\n                // {name, plural, one {...} other {...}}\r\n                //                ^--^\r\n                var identifierAndLocation = this.parseIdentifierIfPossible();\r\n                var pluralOffset = 0;\r\n                if (argType !== 'select' && identifierAndLocation.value === 'offset') {\r\n                    if (!this.bumpIf(':')) {\r\n                        return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\r\n                    }\r\n                    this.bumpSpace();\r\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\r\n                    if (result.err) {\r\n                        return result;\r\n                    }\r\n                    // Parse another identifier for option parsing\r\n                    this.bumpSpace();\r\n                    identifierAndLocation = this.parseIdentifierIfPossible();\r\n                    pluralOffset = result.val;\r\n                }\r\n                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\r\n                if (optionsResult.err) {\r\n                    return optionsResult;\r\n                }\r\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\r\n                if (argCloseResult.err) {\r\n                    return argCloseResult;\r\n                }\r\n                var location_2 = createLocation(openingBracePosition, this.clonePosition());\r\n                if (argType === 'select') {\r\n                    return {\r\n                        val: {\r\n                            type: TYPE.select,\r\n                            value: value,\r\n                            options: fromEntries(optionsResult.val),\r\n                            location: location_2,\r\n                        },\r\n                        err: null,\r\n                    };\r\n                }\r\n                else {\r\n                    return {\r\n                        val: {\r\n                            type: TYPE.plural,\r\n                            value: value,\r\n                            options: fromEntries(optionsResult.val),\r\n                            offset: pluralOffset,\r\n                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\r\n                            location: location_2,\r\n                        },\r\n                        err: null,\r\n                    };\r\n                }\r\n            }\r\n            default:\r\n                return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\r\n        }\r\n    };\r\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\r\n        // Parse: {value, number, ::currency/GBP }\r\n        //\r\n        if (this.isEOF() || this.char() !== 125 /* `}` */) {\r\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\r\n        }\r\n        this.bump(); // `}`\r\n        return { val: true, err: null };\r\n    };\r\n    /**\r\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\r\n     */\r\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\r\n        var nestedBraces = 0;\r\n        var startPosition = this.clonePosition();\r\n        while (!this.isEOF()) {\r\n            var ch = this.char();\r\n            switch (ch) {\r\n                case 39 /* `'` */: {\r\n                    // Treat apostrophe as quoting but include it in the style part.\r\n                    // Find the end of the quoted literal text.\r\n                    this.bump();\r\n                    var apostrophePosition = this.clonePosition();\r\n                    if (!this.bumpUntil(\"'\")) {\r\n                        return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\r\n                    }\r\n                    this.bump();\r\n                    break;\r\n                }\r\n                case 123 /* `{` */: {\r\n                    nestedBraces += 1;\r\n                    this.bump();\r\n                    break;\r\n                }\r\n                case 125 /* `}` */: {\r\n                    if (nestedBraces > 0) {\r\n                        nestedBraces -= 1;\r\n                    }\r\n                    else {\r\n                        return {\r\n                            val: this.message.slice(startPosition.offset, this.offset()),\r\n                            err: null,\r\n                        };\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    this.bump();\r\n                    break;\r\n            }\r\n        }\r\n        return {\r\n            val: this.message.slice(startPosition.offset, this.offset()),\r\n            err: null,\r\n        };\r\n    };\r\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\r\n        var tokens = [];\r\n        try {\r\n            tokens = parseNumberSkeletonFromString(skeleton);\r\n        }\r\n        catch (e) {\r\n            return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);\r\n        }\r\n        return {\r\n            val: {\r\n                type: SKELETON_TYPE.number,\r\n                tokens: tokens,\r\n                location: location,\r\n                parsedOptions: this.shouldParseSkeletons\r\n                    ? parseNumberSkeleton(tokens)\r\n                    : {},\r\n            },\r\n            err: null,\r\n        };\r\n    };\r\n    /**\r\n     * @param nesting_level The current nesting level of messages.\r\n     *     This can be positive when parsing message fragment in select or plural argument options.\r\n     * @param parent_arg_type The parent argument's type.\r\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\r\n     *     the argument. It is a by-product of a previous parsing attempt.\r\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\r\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\r\n     *     the closing tag boundary.\r\n     */\r\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\r\n        var _a;\r\n        var hasOtherClause = false;\r\n        var options = [];\r\n        var parsedSelectors = new Set();\r\n        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\r\n        // Parse:\r\n        // one {one apple}\r\n        // ^--^\r\n        while (true) {\r\n            if (selector.length === 0) {\r\n                var startPosition = this.clonePosition();\r\n                if (parentArgType !== 'select' && this.bumpIf('=')) {\r\n                    // Try parse `={number}` selector\r\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\r\n                    if (result.err) {\r\n                        return result;\r\n                    }\r\n                    selectorLocation = createLocation(startPosition, this.clonePosition());\r\n                    selector = this.message.slice(startPosition.offset, this.offset());\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            // Duplicate selector clauses\r\n            if (parsedSelectors.has(selector)) {\r\n                return this.error(parentArgType === 'select'\r\n                    ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR\r\n                    : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\r\n            }\r\n            if (selector === 'other') {\r\n                hasOtherClause = true;\r\n            }\r\n            // Parse:\r\n            // one {one apple}\r\n            //     ^----------^\r\n            this.bumpSpace();\r\n            var openingBracePosition = this.clonePosition();\r\n            if (!this.bumpIf('{')) {\r\n                return this.error(parentArgType === 'select'\r\n                    ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\r\n                    : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\r\n            }\r\n            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\r\n            if (fragmentResult.err) {\r\n                return fragmentResult;\r\n            }\r\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\r\n            if (argCloseResult.err) {\r\n                return argCloseResult;\r\n            }\r\n            options.push([\r\n                selector,\r\n                {\r\n                    value: fragmentResult.val,\r\n                    location: createLocation(openingBracePosition, this.clonePosition()),\r\n                },\r\n            ]);\r\n            // Keep track of the existing selectors\r\n            parsedSelectors.add(selector);\r\n            // Prep next selector clause.\r\n            this.bumpSpace();\r\n            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);\r\n        }\r\n        if (options.length === 0) {\r\n            return this.error(parentArgType === 'select'\r\n                ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR\r\n                : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\r\n        }\r\n        if (this.requiresOtherClause && !hasOtherClause) {\r\n            return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\r\n        }\r\n        return { val: options, err: null };\r\n    };\r\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\r\n        var sign = 1;\r\n        var startingPosition = this.clonePosition();\r\n        if (this.bumpIf('+')) {\r\n        }\r\n        else if (this.bumpIf('-')) {\r\n            sign = -1;\r\n        }\r\n        var hasDigits = false;\r\n        var decimal = 0;\r\n        while (!this.isEOF()) {\r\n            var ch = this.char();\r\n            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\r\n                hasDigits = true;\r\n                decimal = decimal * 10 + (ch - 48);\r\n                this.bump();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        var location = createLocation(startingPosition, this.clonePosition());\r\n        if (!hasDigits) {\r\n            return this.error(expectNumberError, location);\r\n        }\r\n        decimal *= sign;\r\n        if (!isSafeInteger(decimal)) {\r\n            return this.error(invalidNumberError, location);\r\n        }\r\n        return { val: decimal, err: null };\r\n    };\r\n    Parser.prototype.offset = function () {\r\n        return this.position.offset;\r\n    };\r\n    Parser.prototype.isEOF = function () {\r\n        return this.offset() === this.message.length;\r\n    };\r\n    Parser.prototype.clonePosition = function () {\r\n        // This is much faster than `Object.assign` or spread.\r\n        return {\r\n            offset: this.position.offset,\r\n            line: this.position.line,\r\n            column: this.position.column,\r\n        };\r\n    };\r\n    /**\r\n     * Return the code point at the current position of the parser.\r\n     * Throws if the index is out of bound.\r\n     */\r\n    Parser.prototype.char = function () {\r\n        var offset = this.position.offset;\r\n        if (offset >= this.message.length) {\r\n            throw Error('out of bound');\r\n        }\r\n        var code = codePointAt(this.message, offset);\r\n        if (code === undefined) {\r\n            throw Error(\"Offset \".concat(offset, \" is at invalid UTF-16 code unit boundary\"));\r\n        }\r\n        return code;\r\n    };\r\n    Parser.prototype.error = function (kind, location) {\r\n        return {\r\n            val: null,\r\n            err: {\r\n                kind: kind,\r\n                message: this.message,\r\n                location: location,\r\n            },\r\n        };\r\n    };\r\n    /** Bump the parser to the next UTF-16 code unit. */\r\n    Parser.prototype.bump = function () {\r\n        if (this.isEOF()) {\r\n            return;\r\n        }\r\n        var code = this.char();\r\n        if (code === 10 /* '\\n' */) {\r\n            this.position.line += 1;\r\n            this.position.column = 1;\r\n            this.position.offset += 1;\r\n        }\r\n        else {\r\n            this.position.column += 1;\r\n            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\r\n            this.position.offset += code < 0x10000 ? 1 : 2;\r\n        }\r\n    };\r\n    /**\r\n     * If the substring starting at the current position of the parser has\r\n     * the given prefix, then bump the parser to the character immediately\r\n     * following the prefix and return true. Otherwise, don't bump the parser\r\n     * and return false.\r\n     */\r\n    Parser.prototype.bumpIf = function (prefix) {\r\n        if (startsWith(this.message, prefix, this.offset())) {\r\n            for (var i = 0; i < prefix.length; i++) {\r\n                this.bump();\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Bump the parser until the pattern character is found and return `true`.\r\n     * Otherwise bump to the end of the file and return `false`.\r\n     */\r\n    Parser.prototype.bumpUntil = function (pattern) {\r\n        var currentOffset = this.offset();\r\n        var index = this.message.indexOf(pattern, currentOffset);\r\n        if (index >= 0) {\r\n            this.bumpTo(index);\r\n            return true;\r\n        }\r\n        else {\r\n            this.bumpTo(this.message.length);\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Bump the parser to the target offset.\r\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\r\n     */\r\n    Parser.prototype.bumpTo = function (targetOffset) {\r\n        if (this.offset() > targetOffset) {\r\n            throw Error(\"targetOffset \".concat(targetOffset, \" must be greater than or equal to the current offset \").concat(this.offset()));\r\n        }\r\n        targetOffset = Math.min(targetOffset, this.message.length);\r\n        while (true) {\r\n            var offset = this.offset();\r\n            if (offset === targetOffset) {\r\n                break;\r\n            }\r\n            if (offset > targetOffset) {\r\n                throw Error(\"targetOffset \".concat(targetOffset, \" is at invalid UTF-16 code unit boundary\"));\r\n            }\r\n            this.bump();\r\n            if (this.isEOF()) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\r\n    Parser.prototype.bumpSpace = function () {\r\n        while (!this.isEOF() && _isWhiteSpace(this.char())) {\r\n            this.bump();\r\n        }\r\n    };\r\n    /**\r\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\r\n     * If the input has been exhausted, then this returns null.\r\n     */\r\n    Parser.prototype.peek = function () {\r\n        if (this.isEOF()) {\r\n            return null;\r\n        }\r\n        var code = this.char();\r\n        var offset = this.offset();\r\n        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\r\n        return nextCode !== null && nextCode !== void 0 ? nextCode : null;\r\n    };\r\n    return Parser;\r\n}());\r\nexport { Parser };\r\n/**\r\n * This check if codepoint is alphabet (lower & uppercase)\r\n * @param codepoint\r\n * @returns\r\n */\r\nfunction _isAlpha(codepoint) {\r\n    return ((codepoint >= 97 && codepoint <= 122) ||\r\n        (codepoint >= 65 && codepoint <= 90));\r\n}\r\nfunction _isAlphaOrSlash(codepoint) {\r\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\r\n}\r\n/** See `parseTag` function docs. */\r\nfunction _isPotentialElementNameChar(c) {\r\n    return (c === 45 /* '-' */ ||\r\n        c === 46 /* '.' */ ||\r\n        (c >= 48 && c <= 57) /* 0..9 */ ||\r\n        c === 95 /* '_' */ ||\r\n        (c >= 97 && c <= 122) /** a..z */ ||\r\n        (c >= 65 && c <= 90) /* A..Z */ ||\r\n        c == 0xb7 ||\r\n        (c >= 0xc0 && c <= 0xd6) ||\r\n        (c >= 0xd8 && c <= 0xf6) ||\r\n        (c >= 0xf8 && c <= 0x37d) ||\r\n        (c >= 0x37f && c <= 0x1fff) ||\r\n        (c >= 0x200c && c <= 0x200d) ||\r\n        (c >= 0x203f && c <= 0x2040) ||\r\n        (c >= 0x2070 && c <= 0x218f) ||\r\n        (c >= 0x2c00 && c <= 0x2fef) ||\r\n        (c >= 0x3001 && c <= 0xd7ff) ||\r\n        (c >= 0xf900 && c <= 0xfdcf) ||\r\n        (c >= 0xfdf0 && c <= 0xfffd) ||\r\n        (c >= 0x10000 && c <= 0xeffff));\r\n}\r\n/**\r\n * Code point equivalent of regex `\\p{White_Space}`.\r\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\r\n */\r\nfunction _isWhiteSpace(c) {\r\n    return ((c >= 0x0009 && c <= 0x000d) ||\r\n        c === 0x0020 ||\r\n        c === 0x0085 ||\r\n        (c >= 0x200e && c <= 0x200f) ||\r\n        c === 0x2028 ||\r\n        c === 0x2029);\r\n}\r\n/**\r\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\r\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\r\n */\r\nfunction _isPatternSyntax(c) {\r\n    return ((c >= 0x0021 && c <= 0x0023) ||\r\n        c === 0x0024 ||\r\n        (c >= 0x0025 && c <= 0x0027) ||\r\n        c === 0x0028 ||\r\n        c === 0x0029 ||\r\n        c === 0x002a ||\r\n        c === 0x002b ||\r\n        c === 0x002c ||\r\n        c === 0x002d ||\r\n        (c >= 0x002e && c <= 0x002f) ||\r\n        (c >= 0x003a && c <= 0x003b) ||\r\n        (c >= 0x003c && c <= 0x003e) ||\r\n        (c >= 0x003f && c <= 0x0040) ||\r\n        c === 0x005b ||\r\n        c === 0x005c ||\r\n        c === 0x005d ||\r\n        c === 0x005e ||\r\n        c === 0x0060 ||\r\n        c === 0x007b ||\r\n        c === 0x007c ||\r\n        c === 0x007d ||\r\n        c === 0x007e ||\r\n        c === 0x00a1 ||\r\n        (c >= 0x00a2 && c <= 0x00a5) ||\r\n        c === 0x00a6 ||\r\n        c === 0x00a7 ||\r\n        c === 0x00a9 ||\r\n        c === 0x00ab ||\r\n        c === 0x00ac ||\r\n        c === 0x00ae ||\r\n        c === 0x00b0 ||\r\n        c === 0x00b1 ||\r\n        c === 0x00b6 ||\r\n        c === 0x00bb ||\r\n        c === 0x00bf ||\r\n        c === 0x00d7 ||\r\n        c === 0x00f7 ||\r\n        (c >= 0x2010 && c <= 0x2015) ||\r\n        (c >= 0x2016 && c <= 0x2017) ||\r\n        c === 0x2018 ||\r\n        c === 0x2019 ||\r\n        c === 0x201a ||\r\n        (c >= 0x201b && c <= 0x201c) ||\r\n        c === 0x201d ||\r\n        c === 0x201e ||\r\n        c === 0x201f ||\r\n        (c >= 0x2020 && c <= 0x2027) ||\r\n        (c >= 0x2030 && c <= 0x2038) ||\r\n        c === 0x2039 ||\r\n        c === 0x203a ||\r\n        (c >= 0x203b && c <= 0x203e) ||\r\n        (c >= 0x2041 && c <= 0x2043) ||\r\n        c === 0x2044 ||\r\n        c === 0x2045 ||\r\n        c === 0x2046 ||\r\n        (c >= 0x2047 && c <= 0x2051) ||\r\n        c === 0x2052 ||\r\n        c === 0x2053 ||\r\n        (c >= 0x2055 && c <= 0x205e) ||\r\n        (c >= 0x2190 && c <= 0x2194) ||\r\n        (c >= 0x2195 && c <= 0x2199) ||\r\n        (c >= 0x219a && c <= 0x219b) ||\r\n        (c >= 0x219c && c <= 0x219f) ||\r\n        c === 0x21a0 ||\r\n        (c >= 0x21a1 && c <= 0x21a2) ||\r\n        c === 0x21a3 ||\r\n        (c >= 0x21a4 && c <= 0x21a5) ||\r\n        c === 0x21a6 ||\r\n        (c >= 0x21a7 && c <= 0x21ad) ||\r\n        c === 0x21ae ||\r\n        (c >= 0x21af && c <= 0x21cd) ||\r\n        (c >= 0x21ce && c <= 0x21cf) ||\r\n        (c >= 0x21d0 && c <= 0x21d1) ||\r\n        c === 0x21d2 ||\r\n        c === 0x21d3 ||\r\n        c === 0x21d4 ||\r\n        (c >= 0x21d5 && c <= 0x21f3) ||\r\n        (c >= 0x21f4 && c <= 0x22ff) ||\r\n        (c >= 0x2300 && c <= 0x2307) ||\r\n        c === 0x2308 ||\r\n        c === 0x2309 ||\r\n        c === 0x230a ||\r\n        c === 0x230b ||\r\n        (c >= 0x230c && c <= 0x231f) ||\r\n        (c >= 0x2320 && c <= 0x2321) ||\r\n        (c >= 0x2322 && c <= 0x2328) ||\r\n        c === 0x2329 ||\r\n        c === 0x232a ||\r\n        (c >= 0x232b && c <= 0x237b) ||\r\n        c === 0x237c ||\r\n        (c >= 0x237d && c <= 0x239a) ||\r\n        (c >= 0x239b && c <= 0x23b3) ||\r\n        (c >= 0x23b4 && c <= 0x23db) ||\r\n        (c >= 0x23dc && c <= 0x23e1) ||\r\n        (c >= 0x23e2 && c <= 0x2426) ||\r\n        (c >= 0x2427 && c <= 0x243f) ||\r\n        (c >= 0x2440 && c <= 0x244a) ||\r\n        (c >= 0x244b && c <= 0x245f) ||\r\n        (c >= 0x2500 && c <= 0x25b6) ||\r\n        c === 0x25b7 ||\r\n        (c >= 0x25b8 && c <= 0x25c0) ||\r\n        c === 0x25c1 ||\r\n        (c >= 0x25c2 && c <= 0x25f7) ||\r\n        (c >= 0x25f8 && c <= 0x25ff) ||\r\n        (c >= 0x2600 && c <= 0x266e) ||\r\n        c === 0x266f ||\r\n        (c >= 0x2670 && c <= 0x2767) ||\r\n        c === 0x2768 ||\r\n        c === 0x2769 ||\r\n        c === 0x276a ||\r\n        c === 0x276b ||\r\n        c === 0x276c ||\r\n        c === 0x276d ||\r\n        c === 0x276e ||\r\n        c === 0x276f ||\r\n        c === 0x2770 ||\r\n        c === 0x2771 ||\r\n        c === 0x2772 ||\r\n        c === 0x2773 ||\r\n        c === 0x2774 ||\r\n        c === 0x2775 ||\r\n        (c >= 0x2794 && c <= 0x27bf) ||\r\n        (c >= 0x27c0 && c <= 0x27c4) ||\r\n        c === 0x27c5 ||\r\n        c === 0x27c6 ||\r\n        (c >= 0x27c7 && c <= 0x27e5) ||\r\n        c === 0x27e6 ||\r\n        c === 0x27e7 ||\r\n        c === 0x27e8 ||\r\n        c === 0x27e9 ||\r\n        c === 0x27ea ||\r\n        c === 0x27eb ||\r\n        c === 0x27ec ||\r\n        c === 0x27ed ||\r\n        c === 0x27ee ||\r\n        c === 0x27ef ||\r\n        (c >= 0x27f0 && c <= 0x27ff) ||\r\n        (c >= 0x2800 && c <= 0x28ff) ||\r\n        (c >= 0x2900 && c <= 0x2982) ||\r\n        c === 0x2983 ||\r\n        c === 0x2984 ||\r\n        c === 0x2985 ||\r\n        c === 0x2986 ||\r\n        c === 0x2987 ||\r\n        c === 0x2988 ||\r\n        c === 0x2989 ||\r\n        c === 0x298a ||\r\n        c === 0x298b ||\r\n        c === 0x298c ||\r\n        c === 0x298d ||\r\n        c === 0x298e ||\r\n        c === 0x298f ||\r\n        c === 0x2990 ||\r\n        c === 0x2991 ||\r\n        c === 0x2992 ||\r\n        c === 0x2993 ||\r\n        c === 0x2994 ||\r\n        c === 0x2995 ||\r\n        c === 0x2996 ||\r\n        c === 0x2997 ||\r\n        c === 0x2998 ||\r\n        (c >= 0x2999 && c <= 0x29d7) ||\r\n        c === 0x29d8 ||\r\n        c === 0x29d9 ||\r\n        c === 0x29da ||\r\n        c === 0x29db ||\r\n        (c >= 0x29dc && c <= 0x29fb) ||\r\n        c === 0x29fc ||\r\n        c === 0x29fd ||\r\n        (c >= 0x29fe && c <= 0x2aff) ||\r\n        (c >= 0x2b00 && c <= 0x2b2f) ||\r\n        (c >= 0x2b30 && c <= 0x2b44) ||\r\n        (c >= 0x2b45 && c <= 0x2b46) ||\r\n        (c >= 0x2b47 && c <= 0x2b4c) ||\r\n        (c >= 0x2b4d && c <= 0x2b73) ||\r\n        (c >= 0x2b74 && c <= 0x2b75) ||\r\n        (c >= 0x2b76 && c <= 0x2b95) ||\r\n        c === 0x2b96 ||\r\n        (c >= 0x2b97 && c <= 0x2bff) ||\r\n        (c >= 0x2e00 && c <= 0x2e01) ||\r\n        c === 0x2e02 ||\r\n        c === 0x2e03 ||\r\n        c === 0x2e04 ||\r\n        c === 0x2e05 ||\r\n        (c >= 0x2e06 && c <= 0x2e08) ||\r\n        c === 0x2e09 ||\r\n        c === 0x2e0a ||\r\n        c === 0x2e0b ||\r\n        c === 0x2e0c ||\r\n        c === 0x2e0d ||\r\n        (c >= 0x2e0e && c <= 0x2e16) ||\r\n        c === 0x2e17 ||\r\n        (c >= 0x2e18 && c <= 0x2e19) ||\r\n        c === 0x2e1a ||\r\n        c === 0x2e1b ||\r\n        c === 0x2e1c ||\r\n        c === 0x2e1d ||\r\n        (c >= 0x2e1e && c <= 0x2e1f) ||\r\n        c === 0x2e20 ||\r\n        c === 0x2e21 ||\r\n        c === 0x2e22 ||\r\n        c === 0x2e23 ||\r\n        c === 0x2e24 ||\r\n        c === 0x2e25 ||\r\n        c === 0x2e26 ||\r\n        c === 0x2e27 ||\r\n        c === 0x2e28 ||\r\n        c === 0x2e29 ||\r\n        (c >= 0x2e2a && c <= 0x2e2e) ||\r\n        c === 0x2e2f ||\r\n        (c >= 0x2e30 && c <= 0x2e39) ||\r\n        (c >= 0x2e3a && c <= 0x2e3b) ||\r\n        (c >= 0x2e3c && c <= 0x2e3f) ||\r\n        c === 0x2e40 ||\r\n        c === 0x2e41 ||\r\n        c === 0x2e42 ||\r\n        (c >= 0x2e43 && c <= 0x2e4f) ||\r\n        (c >= 0x2e50 && c <= 0x2e51) ||\r\n        c === 0x2e52 ||\r\n        (c >= 0x2e53 && c <= 0x2e7f) ||\r\n        (c >= 0x3001 && c <= 0x3003) ||\r\n        c === 0x3008 ||\r\n        c === 0x3009 ||\r\n        c === 0x300a ||\r\n        c === 0x300b ||\r\n        c === 0x300c ||\r\n        c === 0x300d ||\r\n        c === 0x300e ||\r\n        c === 0x300f ||\r\n        c === 0x3010 ||\r\n        c === 0x3011 ||\r\n        (c >= 0x3012 && c <= 0x3013) ||\r\n        c === 0x3014 ||\r\n        c === 0x3015 ||\r\n        c === 0x3016 ||\r\n        c === 0x3017 ||\r\n        c === 0x3018 ||\r\n        c === 0x3019 ||\r\n        c === 0x301a ||\r\n        c === 0x301b ||\r\n        c === 0x301c ||\r\n        c === 0x301d ||\r\n        (c >= 0x301e && c <= 0x301f) ||\r\n        c === 0x3020 ||\r\n        c === 0x3030 ||\r\n        c === 0xfd3e ||\r\n        c === 0xfd3f ||\r\n        (c >= 0xfe45 && c <= 0xfe46));\r\n}\r\n", "export var TYPE;\r\n(function (TYPE) {\r\n    /**\r\n     * Raw text\r\n     */\r\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\r\n    /**\r\n     * Variable w/o any format, e.g `var` in `this is a {var}`\r\n     */\r\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\r\n    /**\r\n     * Variable w/ number format\r\n     */\r\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\r\n    /**\r\n     * Variable w/ date format\r\n     */\r\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\r\n    /**\r\n     * Variable w/ time format\r\n     */\r\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\r\n    /**\r\n     * Variable w/ select format\r\n     */\r\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\r\n    /**\r\n     * Variable w/ plural format\r\n     */\r\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\r\n    /**\r\n     * Only possible within plural argument.\r\n     * This is the `#` symbol that will be substituted with the count.\r\n     */\r\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\r\n    /**\r\n     * XML-like tag\r\n     */\r\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\r\n})(TYPE || (TYPE = {}));\r\nexport var SKELETON_TYPE;\r\n(function (SKELETON_TYPE) {\r\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\r\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\r\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\r\n/**\r\n * Type Guards\r\n */\r\nexport function isLiteralElement(el) {\r\n    return el.type === TYPE.literal;\r\n}\r\nexport function isArgumentElement(el) {\r\n    return el.type === TYPE.argument;\r\n}\r\nexport function isNumberElement(el) {\r\n    return el.type === TYPE.number;\r\n}\r\nexport function isDateElement(el) {\r\n    return el.type === TYPE.date;\r\n}\r\nexport function isTimeElement(el) {\r\n    return el.type === TYPE.time;\r\n}\r\nexport function isSelectElement(el) {\r\n    return el.type === TYPE.select;\r\n}\r\nexport function isPluralElement(el) {\r\n    return el.type === TYPE.plural;\r\n}\r\nexport function isPoundElement(el) {\r\n    return el.type === TYPE.pound;\r\n}\r\nexport function isTagElement(el) {\r\n    return el.type === TYPE.tag;\r\n}\r\nexport function isNumberSkeleton(el) {\r\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\r\n}\r\nexport function isDateTimeSkeleton(el) {\r\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\r\n}\r\nexport function createLiteralElement(value) {\r\n    return {\r\n        type: TYPE.literal,\r\n        value: value,\r\n    };\r\n}\r\nexport function createNumberElement(value, style) {\r\n    return {\r\n        type: TYPE.number,\r\n        value: value,\r\n        style: style,\r\n    };\r\n}\r\n", "// @generated from regex-gen.ts\r\nexport var SPACE_SEPARATOR_REGEX = /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\r\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\r\n", "/**\r\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\r\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\r\n * with some tweaks\r\n */\r\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\r\n/**\r\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\r\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\r\n * @public\r\n * @param skeleton skeleton string\r\n */\r\nexport function parseDateTimeSkeleton(skeleton) {\r\n    var result = {};\r\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\r\n        var len = match.length;\r\n        switch (match[0]) {\r\n            // Era\r\n            case 'G':\r\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\r\n                break;\r\n            // Year\r\n            case 'y':\r\n                result.year = len === 2 ? '2-digit' : 'numeric';\r\n                break;\r\n            case 'Y':\r\n            case 'u':\r\n            case 'U':\r\n            case 'r':\r\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\r\n            // Quarter\r\n            case 'q':\r\n            case 'Q':\r\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\r\n            // Month\r\n            case 'M':\r\n            case 'L':\r\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\r\n                break;\r\n            // Week\r\n            case 'w':\r\n            case 'W':\r\n                throw new RangeError('`w/W` (week) patterns are not supported');\r\n            case 'd':\r\n                result.day = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            case 'D':\r\n            case 'F':\r\n            case 'g':\r\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\r\n            // Weekday\r\n            case 'E':\r\n                result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\r\n                break;\r\n            case 'e':\r\n                if (len < 4) {\r\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\r\n                }\r\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\r\n                break;\r\n            case 'c':\r\n                if (len < 4) {\r\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\r\n                }\r\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\r\n                break;\r\n            // Period\r\n            case 'a': // AM, PM\r\n                result.hour12 = true;\r\n                break;\r\n            case 'b': // am, pm, noon, midnight\r\n            case 'B': // flexible day periods\r\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\r\n            // Hour\r\n            case 'h':\r\n                result.hourCycle = 'h12';\r\n                result.hour = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            case 'H':\r\n                result.hourCycle = 'h23';\r\n                result.hour = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            case 'K':\r\n                result.hourCycle = 'h11';\r\n                result.hour = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            case 'k':\r\n                result.hourCycle = 'h24';\r\n                result.hour = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            case 'j':\r\n            case 'J':\r\n            case 'C':\r\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\r\n            // Minute\r\n            case 'm':\r\n                result.minute = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            // Second\r\n            case 's':\r\n                result.second = ['numeric', '2-digit'][len - 1];\r\n                break;\r\n            case 'S':\r\n            case 'A':\r\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\r\n            // Zone\r\n            case 'z': // 1..3, 4: specific non-location format\r\n                result.timeZoneName = len < 4 ? 'short' : 'long';\r\n                break;\r\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\r\n            case 'O': // 1, 4: milliseconds in day short, long\r\n            case 'v': // 1, 4: generic non-location format\r\n            case 'V': // 1, 2, 3, 4: time zone ID or city\r\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\r\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\r\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\r\n        }\r\n        return '';\r\n    });\r\n    return result;\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport { WHITE_SPACE_REGEX } from './regex.generated';\r\nexport function parseNumberSkeletonFromString(skeleton) {\r\n    if (skeleton.length === 0) {\r\n        throw new Error('Number skeleton cannot be empty');\r\n    }\r\n    // Parse the skeleton\r\n    var stringTokens = skeleton\r\n        .split(WHITE_SPACE_REGEX)\r\n        .filter(function (x) { return x.length > 0; });\r\n    var tokens = [];\r\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\r\n        var stringToken = stringTokens_1[_i];\r\n        var stemAndOptions = stringToken.split('/');\r\n        if (stemAndOptions.length === 0) {\r\n            throw new Error('Invalid number skeleton');\r\n        }\r\n        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\r\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\r\n            var option = options_1[_a];\r\n            if (option.length === 0) {\r\n                throw new Error('Invalid number skeleton');\r\n            }\r\n        }\r\n        tokens.push({ stem: stem, options: options });\r\n    }\r\n    return tokens;\r\n}\r\nfunction icuUnitToEcma(unit) {\r\n    return unit.replace(/^(.*?)-/, '');\r\n}\r\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\r\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?[rs]?$/g;\r\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\r\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\r\nfunction parseSignificantPrecision(str) {\r\n    var result = {};\r\n    if (str[str.length - 1] === 'r') {\r\n        result.roundingPriority = 'morePrecision';\r\n    }\r\n    else if (str[str.length - 1] === 's') {\r\n        result.roundingPriority = 'lessPrecision';\r\n    }\r\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\r\n        // @@@ case\r\n        if (typeof g2 !== 'string') {\r\n            result.minimumSignificantDigits = g1.length;\r\n            result.maximumSignificantDigits = g1.length;\r\n        }\r\n        // @@@+ case\r\n        else if (g2 === '+') {\r\n            result.minimumSignificantDigits = g1.length;\r\n        }\r\n        // .### case\r\n        else if (g1[0] === '#') {\r\n            result.maximumSignificantDigits = g1.length;\r\n        }\r\n        // .@@## or .@@@ case\r\n        else {\r\n            result.minimumSignificantDigits = g1.length;\r\n            result.maximumSignificantDigits =\r\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\r\n        }\r\n        return '';\r\n    });\r\n    return result;\r\n}\r\nfunction parseSign(str) {\r\n    switch (str) {\r\n        case 'sign-auto':\r\n            return {\r\n                signDisplay: 'auto',\r\n            };\r\n        case 'sign-accounting':\r\n        case '()':\r\n            return {\r\n                currencySign: 'accounting',\r\n            };\r\n        case 'sign-always':\r\n        case '+!':\r\n            return {\r\n                signDisplay: 'always',\r\n            };\r\n        case 'sign-accounting-always':\r\n        case '()!':\r\n            return {\r\n                signDisplay: 'always',\r\n                currencySign: 'accounting',\r\n            };\r\n        case 'sign-except-zero':\r\n        case '+?':\r\n            return {\r\n                signDisplay: 'exceptZero',\r\n            };\r\n        case 'sign-accounting-except-zero':\r\n        case '()?':\r\n            return {\r\n                signDisplay: 'exceptZero',\r\n                currencySign: 'accounting',\r\n            };\r\n        case 'sign-never':\r\n        case '+_':\r\n            return {\r\n                signDisplay: 'never',\r\n            };\r\n    }\r\n}\r\nfunction parseConciseScientificAndEngineeringStem(stem) {\r\n    // Engineering\r\n    var result;\r\n    if (stem[0] === 'E' && stem[1] === 'E') {\r\n        result = {\r\n            notation: 'engineering',\r\n        };\r\n        stem = stem.slice(2);\r\n    }\r\n    else if (stem[0] === 'E') {\r\n        result = {\r\n            notation: 'scientific',\r\n        };\r\n        stem = stem.slice(1);\r\n    }\r\n    if (result) {\r\n        var signDisplay = stem.slice(0, 2);\r\n        if (signDisplay === '+!') {\r\n            result.signDisplay = 'always';\r\n            stem = stem.slice(2);\r\n        }\r\n        else if (signDisplay === '+?') {\r\n            result.signDisplay = 'exceptZero';\r\n            stem = stem.slice(2);\r\n        }\r\n        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\r\n            throw new Error('Malformed concise eng/scientific notation');\r\n        }\r\n        result.minimumIntegerDigits = stem.length;\r\n    }\r\n    return result;\r\n}\r\nfunction parseNotationOptions(opt) {\r\n    var result = {};\r\n    var signOpts = parseSign(opt);\r\n    if (signOpts) {\r\n        return signOpts;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\r\n */\r\nexport function parseNumberSkeleton(tokens) {\r\n    var result = {};\r\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\r\n        var token = tokens_1[_i];\r\n        switch (token.stem) {\r\n            case 'percent':\r\n            case '%':\r\n                result.style = 'percent';\r\n                continue;\r\n            case '%x100':\r\n                result.style = 'percent';\r\n                result.scale = 100;\r\n                continue;\r\n            case 'currency':\r\n                result.style = 'currency';\r\n                result.currency = token.options[0];\r\n                continue;\r\n            case 'group-off':\r\n            case ',_':\r\n                result.useGrouping = false;\r\n                continue;\r\n            case 'precision-integer':\r\n            case '.':\r\n                result.maximumFractionDigits = 0;\r\n                continue;\r\n            case 'measure-unit':\r\n            case 'unit':\r\n                result.style = 'unit';\r\n                result.unit = icuUnitToEcma(token.options[0]);\r\n                continue;\r\n            case 'compact-short':\r\n            case 'K':\r\n                result.notation = 'compact';\r\n                result.compactDisplay = 'short';\r\n                continue;\r\n            case 'compact-long':\r\n            case 'KK':\r\n                result.notation = 'compact';\r\n                result.compactDisplay = 'long';\r\n                continue;\r\n            case 'scientific':\r\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\r\n                continue;\r\n            case 'engineering':\r\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\r\n                continue;\r\n            case 'notation-simple':\r\n                result.notation = 'standard';\r\n                continue;\r\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\r\n            case 'unit-width-narrow':\r\n                result.currencyDisplay = 'narrowSymbol';\r\n                result.unitDisplay = 'narrow';\r\n                continue;\r\n            case 'unit-width-short':\r\n                result.currencyDisplay = 'code';\r\n                result.unitDisplay = 'short';\r\n                continue;\r\n            case 'unit-width-full-name':\r\n                result.currencyDisplay = 'name';\r\n                result.unitDisplay = 'long';\r\n                continue;\r\n            case 'unit-width-iso-code':\r\n                result.currencyDisplay = 'symbol';\r\n                continue;\r\n            case 'scale':\r\n                result.scale = parseFloat(token.options[0]);\r\n                continue;\r\n            case 'rounding-mode-floor':\r\n                result.roundingMode = 'floor';\r\n                continue;\r\n            case 'rounding-mode-ceiling':\r\n                result.roundingMode = 'ceil';\r\n                continue;\r\n            case 'rounding-mode-down':\r\n                result.roundingMode = 'trunc';\r\n                continue;\r\n            case 'rounding-mode-up':\r\n                result.roundingMode = 'expand';\r\n                continue;\r\n            case 'rounding-mode-half-even':\r\n                result.roundingMode = 'halfEven';\r\n                continue;\r\n            case 'rounding-mode-half-down':\r\n                result.roundingMode = 'halfTrunc';\r\n                continue;\r\n            case 'rounding-mode-half-up':\r\n                result.roundingMode = 'halfExpand';\r\n                continue;\r\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\r\n            case 'integer-width':\r\n                if (token.options.length > 1) {\r\n                    throw new RangeError('integer-width stems only accept a single optional option');\r\n                }\r\n                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\r\n                    if (g1) {\r\n                        result.minimumIntegerDigits = g2.length;\r\n                    }\r\n                    else if (g3 && g4) {\r\n                        throw new Error('We currently do not support maximum integer digits');\r\n                    }\r\n                    else if (g5) {\r\n                        throw new Error('We currently do not support exact integer digits');\r\n                    }\r\n                    return '';\r\n                });\r\n                continue;\r\n        }\r\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\r\n        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\r\n            result.minimumIntegerDigits = token.stem.length;\r\n            continue;\r\n        }\r\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\r\n            // Precision\r\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\r\n            // precision-integer case\r\n            if (token.options.length > 1) {\r\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\r\n            }\r\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\r\n                // .000* case (before ICU67 it was .000+)\r\n                if (g2 === '*') {\r\n                    result.minimumFractionDigits = g1.length;\r\n                }\r\n                // .### case\r\n                else if (g3 && g3[0] === '#') {\r\n                    result.maximumFractionDigits = g3.length;\r\n                }\r\n                // .00## case\r\n                else if (g4 && g5) {\r\n                    result.minimumFractionDigits = g4.length;\r\n                    result.maximumFractionDigits = g4.length + g5.length;\r\n                }\r\n                else {\r\n                    result.minimumFractionDigits = g1.length;\r\n                    result.maximumFractionDigits = g1.length;\r\n                }\r\n                return '';\r\n            });\r\n            var opt = token.options[0];\r\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display\r\n            if (opt === 'w') {\r\n                result = __assign(__assign({}, result), { trailingZeroDisplay: 'stripIfInteger' });\r\n            }\r\n            else if (opt) {\r\n                result = __assign(__assign({}, result), parseSignificantPrecision(opt));\r\n            }\r\n            continue;\r\n        }\r\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\r\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\r\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\r\n            continue;\r\n        }\r\n        var signOpts = parseSign(token.stem);\r\n        if (signOpts) {\r\n            result = __assign(__assign({}, result), signOpts);\r\n        }\r\n        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\r\n        if (conciseScientificAndEngineeringOpts) {\r\n            result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n", "// @generated from regex-gen.ts\r\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/i;\r\n", "// @generated from time-data-gen.ts\r\n// prettier-ignore  \r\nexport var timeData = {\r\n    \"001\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"AC\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"AD\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AE\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"AF\": [\r\n        \"H\",\r\n        \"hb\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"AG\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AI\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"AL\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AM\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AO\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AR\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"AS\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"AT\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AU\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AW\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"AX\": [\r\n        \"H\"\r\n    ],\r\n    \"AZ\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"BA\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"BB\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BD\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"H\"\r\n    ],\r\n    \"BE\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BF\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BG\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"BH\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"BI\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"BJ\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BL\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BN\": [\r\n        \"hb\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"BO\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"hb\"\r\n    ],\r\n    \"BQ\": [\r\n        \"H\"\r\n    ],\r\n    \"BR\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BS\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"BT\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"BW\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"BY\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"BZ\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"CA\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"CC\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"CD\": [\r\n        \"hB\",\r\n        \"H\"\r\n    ],\r\n    \"CF\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"CG\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"CH\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"CI\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"CK\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"CL\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"CM\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"CN\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\"\r\n    ],\r\n    \"CO\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"CP\": [\r\n        \"H\"\r\n    ],\r\n    \"CR\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"CU\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"CV\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"CW\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"CX\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"CY\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"CZ\": [\r\n        \"H\"\r\n    ],\r\n    \"DE\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"DG\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"DJ\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"DK\": [\r\n        \"H\"\r\n    ],\r\n    \"DM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"DO\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"DZ\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"EA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"EC\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"hb\"\r\n    ],\r\n    \"EE\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"EG\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"EH\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"ER\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"ES\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"hb\"\r\n    ],\r\n    \"ET\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"FI\": [\r\n        \"H\"\r\n    ],\r\n    \"FJ\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"FK\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"FM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"FO\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"FR\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GA\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GB\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"GD\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GE\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"GF\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GG\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"GH\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"GI\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"GL\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"GM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GN\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GP\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GQ\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"hb\"\r\n    ],\r\n    \"GR\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"GT\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"GU\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GW\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"GY\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"HK\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"HN\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"HR\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"HU\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"IC\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"ID\": [\r\n        \"H\"\r\n    ],\r\n    \"IE\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"IL\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"IM\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"IN\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"IO\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"IQ\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"IR\": [\r\n        \"hB\",\r\n        \"H\"\r\n    ],\r\n    \"IS\": [\r\n        \"H\"\r\n    ],\r\n    \"IT\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"JE\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"JM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"JO\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"JP\": [\r\n        \"H\",\r\n        \"K\",\r\n        \"h\"\r\n    ],\r\n    \"KE\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"KG\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"KH\": [\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\",\r\n        \"hb\"\r\n    ],\r\n    \"KI\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"KM\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"KN\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"KP\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"KR\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"KW\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"KY\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"KZ\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"LA\": [\r\n        \"H\",\r\n        \"hb\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"LB\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"LC\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"LI\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"LK\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"LR\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"LS\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"LT\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"LU\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"LV\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\"\r\n    ],\r\n    \"LY\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"MA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"MC\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"MD\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"ME\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"MF\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"MG\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"MH\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"MK\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"ML\": [\r\n        \"H\"\r\n    ],\r\n    \"MM\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"MN\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"MO\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"MP\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"MQ\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"MR\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"MS\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"MT\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"MU\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"MV\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"MW\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"MX\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"MY\": [\r\n        \"hb\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"MZ\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"NA\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"NC\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"NE\": [\r\n        \"H\"\r\n    ],\r\n    \"NF\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"NG\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"NI\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"NL\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"NO\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"NP\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"NR\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"NU\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"NZ\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"OM\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"PA\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"PE\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\",\r\n        \"hb\"\r\n    ],\r\n    \"PF\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"PG\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"PH\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"PK\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"H\"\r\n    ],\r\n    \"PL\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"PM\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"PN\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"PR\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"PS\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"PT\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"PW\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"PY\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"QA\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"RE\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"RO\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"RS\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"RU\": [\r\n        \"H\"\r\n    ],\r\n    \"RW\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"SA\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"SB\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"SC\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"SD\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"SE\": [\r\n        \"H\"\r\n    ],\r\n    \"SG\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"SH\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"SI\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"SJ\": [\r\n        \"H\"\r\n    ],\r\n    \"SK\": [\r\n        \"H\"\r\n    ],\r\n    \"SL\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"SM\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"SN\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"SO\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"SR\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"SS\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"ST\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"SV\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"SX\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"SY\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"SZ\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"TA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"TC\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"TD\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"TF\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"TG\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"TH\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"TJ\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"TL\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\"\r\n    ],\r\n    \"TM\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"TN\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"TO\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"TR\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"TT\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"TW\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"TZ\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"UA\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"UG\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"UM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"US\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"UY\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"UZ\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"VA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"VC\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"VE\": [\r\n        \"h\",\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"VG\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"VI\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"VN\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"VU\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"WF\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"WS\": [\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"XK\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"h\"\r\n    ],\r\n    \"YE\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"YT\": [\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"ZA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"hB\"\r\n    ],\r\n    \"ZM\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"ZW\": [\r\n        \"H\",\r\n        \"h\"\r\n    ],\r\n    \"af-ZA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"ar-001\": [\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"ca-ES\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"en-001\": [\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\",\r\n        \"hB\"\r\n    ],\r\n    \"es-BO\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"es-BR\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"es-EC\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"es-ES\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"es-GQ\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"es-PE\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\",\r\n        \"hb\"\r\n    ],\r\n    \"fr-CA\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"gl-ES\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"gu-IN\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"hi-IN\": [\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"it-CH\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"it-IT\": [\r\n        \"H\",\r\n        \"h\",\r\n        \"hB\"\r\n    ],\r\n    \"kn-IN\": [\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"ml-IN\": [\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"mr-IN\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"pa-IN\": [\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"ta-IN\": [\r\n        \"hB\",\r\n        \"h\",\r\n        \"hb\",\r\n        \"H\"\r\n    ],\r\n    \"te-IN\": [\r\n        \"hB\",\r\n        \"h\",\r\n        \"H\"\r\n    ],\r\n    \"zu-ZA\": [\r\n        \"H\",\r\n        \"hB\",\r\n        \"hb\",\r\n        \"h\"\r\n    ]\r\n};\r\n", "import { timeData } from './time-data.generated';\r\n/**\r\n * Returns the best matching date time pattern if a date time skeleton\r\n * pattern is provided with a locale. Follows the Unicode specification:\r\n * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\r\n * @param skeleton date time skeleton pattern that possibly includes j, J or C\r\n * @param locale\r\n */\r\nexport function getBestPattern(skeleton, locale) {\r\n    var skeletonCopy = '';\r\n    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\r\n        var patternChar = skeleton.charAt(patternPos);\r\n        if (patternChar === 'j') {\r\n            var extraLength = 0;\r\n            while (patternPos + 1 < skeleton.length &&\r\n                skeleton.charAt(patternPos + 1) === patternChar) {\r\n                extraLength++;\r\n                patternPos++;\r\n            }\r\n            var hourLen = 1 + (extraLength & 1);\r\n            var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\r\n            var dayPeriodChar = 'a';\r\n            var hourChar = getDefaultHourSymbolFromLocale(locale);\r\n            if (hourChar == 'H' || hourChar == 'k') {\r\n                dayPeriodLen = 0;\r\n            }\r\n            while (dayPeriodLen-- > 0) {\r\n                skeletonCopy += dayPeriodChar;\r\n            }\r\n            while (hourLen-- > 0) {\r\n                skeletonCopy = hourChar + skeletonCopy;\r\n            }\r\n        }\r\n        else if (patternChar === 'J') {\r\n            skeletonCopy += 'H';\r\n        }\r\n        else {\r\n            skeletonCopy += patternChar;\r\n        }\r\n    }\r\n    return skeletonCopy;\r\n}\r\n/**\r\n * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\r\n * of the given `locale` to the corresponding time pattern.\r\n * @param locale\r\n */\r\nfunction getDefaultHourSymbolFromLocale(locale) {\r\n    var hourCycle = locale.hourCycle;\r\n    if (hourCycle === undefined &&\r\n        // @ts-ignore hourCycle(s) is not identified yet\r\n        locale.hourCycles &&\r\n        // @ts-ignore\r\n        locale.hourCycles.length) {\r\n        // @ts-ignore\r\n        hourCycle = locale.hourCycles[0];\r\n    }\r\n    if (hourCycle) {\r\n        switch (hourCycle) {\r\n            case 'h24':\r\n                return 'k';\r\n            case 'h23':\r\n                return 'H';\r\n            case 'h12':\r\n                return 'h';\r\n            case 'h11':\r\n                return 'K';\r\n            default:\r\n                throw new Error('Invalid hourCycle');\r\n        }\r\n    }\r\n    // TODO: Once hourCycle is fully supported remove the following with data generation\r\n    var languageTag = locale.language;\r\n    var regionTag;\r\n    if (languageTag !== 'root') {\r\n        regionTag = locale.maximize().region;\r\n    }\r\n    var hourCycles = timeData[regionTag || ''] ||\r\n        timeData[languageTag || ''] ||\r\n        timeData[\"\".concat(languageTag, \"-001\")] ||\r\n        timeData['001'];\r\n    return hourCycles[0];\r\n}\r\n", "//\r\n// Main\r\n//\r\nexport function memoize(fn, options) {\r\n    var cache = options && options.cache ? options.cache : cacheDefault;\r\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\r\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\r\n    return strategy(fn, {\r\n        cache: cache,\r\n        serializer: serializer,\r\n    });\r\n}\r\n//\r\n// Strategy\r\n//\r\nfunction isPrimitive(value) {\r\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\r\n}\r\nfunction monadic(fn, cache, serializer, arg) {\r\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\r\n    var computedValue = cache.get(cacheKey);\r\n    if (typeof computedValue === 'undefined') {\r\n        computedValue = fn.call(this, arg);\r\n        cache.set(cacheKey, computedValue);\r\n    }\r\n    return computedValue;\r\n}\r\nfunction variadic(fn, cache, serializer) {\r\n    var args = Array.prototype.slice.call(arguments, 3);\r\n    var cacheKey = serializer(args);\r\n    var computedValue = cache.get(cacheKey);\r\n    if (typeof computedValue === 'undefined') {\r\n        computedValue = fn.apply(this, args);\r\n        cache.set(cacheKey, computedValue);\r\n    }\r\n    return computedValue;\r\n}\r\nfunction assemble(fn, context, strategy, cache, serialize) {\r\n    return strategy.bind(context, fn, cache, serialize);\r\n}\r\nfunction strategyDefault(fn, options) {\r\n    var strategy = fn.length === 1 ? monadic : variadic;\r\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\r\n}\r\nfunction strategyVariadic(fn, options) {\r\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\r\n}\r\nfunction strategyMonadic(fn, options) {\r\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\r\n}\r\n//\r\n// Serializer\r\n//\r\nvar serializerDefault = function () {\r\n    return JSON.stringify(arguments);\r\n};\r\n//\r\n// Cache\r\n//\r\nfunction ObjectWithoutPrototypeCache() {\r\n    this.cache = Object.create(null);\r\n}\r\nObjectWithoutPrototypeCache.prototype.get = function (key) {\r\n    return this.cache[key];\r\n};\r\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\r\n    this.cache[key] = value;\r\n};\r\nvar cacheDefault = {\r\n    create: function create() {\r\n        // @ts-ignore\r\n        return new ObjectWithoutPrototypeCache();\r\n    },\r\n};\r\nexport var strategies = {\r\n    variadic: strategyVariadic,\r\n    monadic: strategyMonadic,\r\n};\r\n", "import { __extends } from \"tslib\";\r\nexport var ErrorCode;\r\n(function (ErrorCode) {\r\n    // When we have a placeholder but no value to format\r\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\r\n    // When value supplied is invalid\r\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\r\n    // When we need specific Intl API but it's not available\r\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\r\n})(ErrorCode || (ErrorCode = {}));\r\nvar FormatError = /** @class */ (function (_super) {\r\n    __extends(FormatError, _super);\r\n    function FormatError(msg, code, originalMessage) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.code = code;\r\n        _this.originalMessage = originalMessage;\r\n        return _this;\r\n    }\r\n    FormatError.prototype.toString = function () {\r\n        return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\r\n    };\r\n    return FormatError;\r\n}(Error));\r\nexport { FormatError };\r\nvar InvalidValueError = /** @class */ (function (_super) {\r\n    __extends(InvalidValueError, _super);\r\n    function InvalidValueError(variableId, value, options, originalMessage) {\r\n        return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\r\n    }\r\n    return InvalidValueError;\r\n}(FormatError));\r\nexport { InvalidValueError };\r\nvar InvalidValueTypeError = /** @class */ (function (_super) {\r\n    __extends(InvalidValueTypeError, _super);\r\n    function InvalidValueTypeError(value, type, originalMessage) {\r\n        return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\r\n    }\r\n    return InvalidValueTypeError;\r\n}(FormatError));\r\nexport { InvalidValueTypeError };\r\nvar MissingValueError = /** @class */ (function (_super) {\r\n    __extends(MissingValueError, _super);\r\n    function MissingValueError(variableId, originalMessage) {\r\n        return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\r\n    }\r\n    return MissingValueError;\r\n}(FormatError));\r\nexport { MissingValueError };\r\n", "import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, isTagElement, } from '@formatjs/icu-messageformat-parser';\r\nimport { MissingValueError, InvalidValueError, ErrorCode, FormatError, InvalidValueTypeError, } from './error';\r\nexport var PART_TYPE;\r\n(function (PART_TYPE) {\r\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\r\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\r\n})(PART_TYPE || (PART_TYPE = {}));\r\nfunction mergeLiteral(parts) {\r\n    if (parts.length < 2) {\r\n        return parts;\r\n    }\r\n    return parts.reduce(function (all, part) {\r\n        var lastPart = all[all.length - 1];\r\n        if (!lastPart ||\r\n            lastPart.type !== PART_TYPE.literal ||\r\n            part.type !== PART_TYPE.literal) {\r\n            all.push(part);\r\n        }\r\n        else {\r\n            lastPart.value += part.value;\r\n        }\r\n        return all;\r\n    }, []);\r\n}\r\nexport function isFormatXMLElementFn(el) {\r\n    return typeof el === 'function';\r\n}\r\n// TODO(skeleton): add skeleton support\r\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \r\n// For debugging\r\noriginalMessage) {\r\n    // Hot path for straight simple msg translations\r\n    if (els.length === 1 && isLiteralElement(els[0])) {\r\n        return [\r\n            {\r\n                type: PART_TYPE.literal,\r\n                value: els[0].value,\r\n            },\r\n        ];\r\n    }\r\n    var result = [];\r\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\r\n        var el = els_1[_i];\r\n        // Exit early for string parts.\r\n        if (isLiteralElement(el)) {\r\n            result.push({\r\n                type: PART_TYPE.literal,\r\n                value: el.value,\r\n            });\r\n            continue;\r\n        }\r\n        // TODO: should this part be literal type?\r\n        // Replace `#` in plural rules with the actual numeric value.\r\n        if (isPoundElement(el)) {\r\n            if (typeof currentPluralValue === 'number') {\r\n                result.push({\r\n                    type: PART_TYPE.literal,\r\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\r\n                });\r\n            }\r\n            continue;\r\n        }\r\n        var varName = el.value;\r\n        // Enforce that all required values are provided by the caller.\r\n        if (!(values && varName in values)) {\r\n            throw new MissingValueError(varName, originalMessage);\r\n        }\r\n        var value = values[varName];\r\n        if (isArgumentElement(el)) {\r\n            if (!value || typeof value === 'string' || typeof value === 'number') {\r\n                value =\r\n                    typeof value === 'string' || typeof value === 'number'\r\n                        ? String(value)\r\n                        : '';\r\n            }\r\n            result.push({\r\n                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\r\n                value: value,\r\n            });\r\n            continue;\r\n        }\r\n        // Recursively format plural and select parts' option — which can be a\r\n        // nested pattern structure. The choosing of the option to use is\r\n        // abstracted-by and delegated-to the part helper object.\r\n        if (isDateElement(el)) {\r\n            var style = typeof el.style === 'string'\r\n                ? formats.date[el.style]\r\n                : isDateTimeSkeleton(el.style)\r\n                    ? el.style.parsedOptions\r\n                    : undefined;\r\n            result.push({\r\n                type: PART_TYPE.literal,\r\n                value: formatters\r\n                    .getDateTimeFormat(locales, style)\r\n                    .format(value),\r\n            });\r\n            continue;\r\n        }\r\n        if (isTimeElement(el)) {\r\n            var style = typeof el.style === 'string'\r\n                ? formats.time[el.style]\r\n                : isDateTimeSkeleton(el.style)\r\n                    ? el.style.parsedOptions\r\n                    : formats.time.medium;\r\n            result.push({\r\n                type: PART_TYPE.literal,\r\n                value: formatters\r\n                    .getDateTimeFormat(locales, style)\r\n                    .format(value),\r\n            });\r\n            continue;\r\n        }\r\n        if (isNumberElement(el)) {\r\n            var style = typeof el.style === 'string'\r\n                ? formats.number[el.style]\r\n                : isNumberSkeleton(el.style)\r\n                    ? el.style.parsedOptions\r\n                    : undefined;\r\n            if (style && style.scale) {\r\n                value =\r\n                    value *\r\n                        (style.scale || 1);\r\n            }\r\n            result.push({\r\n                type: PART_TYPE.literal,\r\n                value: formatters\r\n                    .getNumberFormat(locales, style)\r\n                    .format(value),\r\n            });\r\n            continue;\r\n        }\r\n        if (isTagElement(el)) {\r\n            var children = el.children, value_1 = el.value;\r\n            var formatFn = values[value_1];\r\n            if (!isFormatXMLElementFn(formatFn)) {\r\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\r\n            }\r\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\r\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\r\n            if (!Array.isArray(chunks)) {\r\n                chunks = [chunks];\r\n            }\r\n            result.push.apply(result, chunks.map(function (c) {\r\n                return {\r\n                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\r\n                    value: c,\r\n                };\r\n            }));\r\n        }\r\n        if (isSelectElement(el)) {\r\n            var opt = el.options[value] || el.options.other;\r\n            if (!opt) {\r\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\r\n            }\r\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\r\n            continue;\r\n        }\r\n        if (isPluralElement(el)) {\r\n            var opt = el.options[\"=\".concat(value)];\r\n            if (!opt) {\r\n                if (!Intl.PluralRules) {\r\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API, originalMessage);\r\n                }\r\n                var rule = formatters\r\n                    .getPluralRules(locales, { type: el.pluralType })\r\n                    .select(value - (el.offset || 0));\r\n                opt = el.options[rule] || el.options.other;\r\n            }\r\n            if (!opt) {\r\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\r\n            }\r\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\r\n            continue;\r\n        }\r\n    }\r\n    return mergeLiteral(result);\r\n}\r\n", "import { __extends } from \"tslib\";\r\nexport var IntlErrorCode;\r\n(function (IntlErrorCode) {\r\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\r\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\r\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\r\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\r\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\r\n})(IntlErrorCode || (IntlErrorCode = {}));\r\nvar IntlError = /** @class */ (function (_super) {\r\n    __extends(IntlError, _super);\r\n    function IntlError(code, message, exception) {\r\n        var _this = this;\r\n        var err = exception\r\n            ? exception instanceof Error\r\n                ? exception\r\n                : new Error(String(exception))\r\n            : undefined;\r\n        _this = _super.call(this, \"[@formatjs/intl Error \".concat(code, \"] \").concat(message, \"\\n\").concat(err ? \"\\n\".concat(err.message, \"\\n\").concat(err.stack) : '')) || this;\r\n        _this.code = code;\r\n        // @ts-ignore just so we don't need to declare dep on @types/node\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            // @ts-ignore just so we don't need to declare dep on @types/node\r\n            Error.captureStackTrace(_this, IntlError);\r\n        }\r\n        return _this;\r\n    }\r\n    return IntlError;\r\n}(Error));\r\nexport { IntlError };\r\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\r\n    __extends(UnsupportedFormatterError, _super);\r\n    function UnsupportedFormatterError(message, exception) {\r\n        return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;\r\n    }\r\n    return UnsupportedFormatterError;\r\n}(IntlError));\r\nexport { UnsupportedFormatterError };\r\nvar InvalidConfigError = /** @class */ (function (_super) {\r\n    __extends(InvalidConfigError, _super);\r\n    function InvalidConfigError(message, exception) {\r\n        return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;\r\n    }\r\n    return InvalidConfigError;\r\n}(IntlError));\r\nexport { InvalidConfigError };\r\nvar MissingDataError = /** @class */ (function (_super) {\r\n    __extends(MissingDataError, _super);\r\n    function MissingDataError(message, exception) {\r\n        return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;\r\n    }\r\n    return MissingDataError;\r\n}(IntlError));\r\nexport { MissingDataError };\r\nvar IntlFormatError = /** @class */ (function (_super) {\r\n    __extends(IntlFormatError, _super);\r\n    function IntlFormatError(message, locale, exception) {\r\n        var _this = _super.call(this, IntlErrorCode.FORMAT_ERROR, \"\".concat(message, \"\\nLocale: \").concat(locale, \"\\n\"), exception) || this;\r\n        _this.locale = locale;\r\n        return _this;\r\n    }\r\n    return IntlFormatError;\r\n}(IntlError));\r\nexport { IntlFormatError };\r\nvar MessageFormatError = /** @class */ (function (_super) {\r\n    __extends(MessageFormatError, _super);\r\n    function MessageFormatError(message, locale, descriptor, exception) {\r\n        var _this = _super.call(this, \"\".concat(message, \"\\nMessageID: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.id, \"\\nDefault Message: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage, \"\\nDescription: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.description, \"\\n\"), locale, exception) || this;\r\n        _this.descriptor = descriptor;\r\n        _this.locale = locale;\r\n        return _this;\r\n    }\r\n    return MessageFormatError;\r\n}(IntlFormatError));\r\nexport { MessageFormatError };\r\nvar MissingTranslationError = /** @class */ (function (_super) {\r\n    __extends(MissingTranslationError, _super);\r\n    function MissingTranslationError(descriptor, locale) {\r\n        var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, \"Missing message: \\\"\".concat(descriptor.id, \"\\\" for locale \\\"\").concat(locale, \"\\\", using \").concat(descriptor.defaultMessage\r\n            ? \"default message (\".concat(typeof descriptor.defaultMessage === 'string'\r\n                ? descriptor.defaultMessage\r\n                : descriptor.defaultMessage\r\n                    .map(function (e) { var _a; return (_a = e.value) !== null && _a !== void 0 ? _a : JSON.stringify(e); })\r\n                    .join(), \")\")\r\n            : 'id', \" as fallback.\")) || this;\r\n        _this.descriptor = descriptor;\r\n        return _this;\r\n    }\r\n    return MissingTranslationError;\r\n}(IntlError));\r\nexport { MissingTranslationError };\r\n", "import { __assign } from \"tslib\";\r\nimport { invariant } from '@formatjs/ecma402-abstract';\r\nimport { IntlMessageFormat, } from 'intl-messageformat';\r\nimport { MissingTranslationError, MessageFormatError } from './error';\r\nimport { TYPE } from '@formatjs/icu-messageformat-parser';\r\nfunction setTimeZoneInOptions(opts, timeZone) {\r\n    return Object.keys(opts).reduce(function (all, k) {\r\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\r\n        return all;\r\n    }, {});\r\n}\r\nfunction deepMergeOptions(opts1, opts2) {\r\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\r\n    return keys.reduce(function (all, k) {\r\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\r\n        return all;\r\n    }, {});\r\n}\r\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\r\n    if (!timeZone) {\r\n        return f1;\r\n    }\r\n    var mfFormats = IntlMessageFormat.formats;\r\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\r\n}\r\nexport var formatMessage = function (_a, state, messageDescriptor, values, opts) {\r\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, fallbackOnEmptyString = _a.fallbackOnEmptyString, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\r\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\r\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\r\n    // `id` is a required field of a Message Descriptor.\r\n    invariant(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\r\n    var id = String(msgId);\r\n    var message = \r\n    // In case messages is Object.create(null)\r\n    // e.g import('foo.json') from webpack)\r\n    // See https://github.com/formatjs/formatjs/issues/1914\r\n    messages &&\r\n        Object.prototype.hasOwnProperty.call(messages, id) &&\r\n        messages[id];\r\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\r\n    if (Array.isArray(message) &&\r\n        message.length === 1 &&\r\n        message[0].type === TYPE.literal) {\r\n        return message[0].value;\r\n    }\r\n    // IMPORTANT: Hot path straight lookup for performance\r\n    if (!values &&\r\n        message &&\r\n        typeof message === 'string' &&\r\n        !defaultRichTextElements) {\r\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\r\n    }\r\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\r\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\r\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\r\n    if (!message) {\r\n        if (fallbackOnEmptyString === false && message === '') {\r\n            return message;\r\n        }\r\n        if (!defaultMessage ||\r\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\r\n            // This prevents warnings from littering the console in development\r\n            // when no `messages` are passed into the <IntlProvider> for the\r\n            // default locale.\r\n            onError(new MissingTranslationError(messageDescriptor, locale));\r\n        }\r\n        if (defaultMessage) {\r\n            try {\r\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\r\n                return formatter.format(values);\r\n            }\r\n            catch (e) {\r\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\r\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    // We have the translated message\r\n    try {\r\n        var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, (opts || {})));\r\n        return formatter.format(values);\r\n    }\r\n    catch (e) {\r\n        onError(new MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\r\n    }\r\n    if (defaultMessage) {\r\n        try {\r\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\r\n            return formatter.format(values);\r\n        }\r\n        catch (e) {\r\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\r\n        }\r\n    }\r\n    if (typeof message === 'string') {\r\n        return message;\r\n    }\r\n    if (typeof defaultMessage === 'string') {\r\n        return defaultMessage;\r\n    }\r\n    return id;\r\n};\r\n", "import { __assign } from \"tslib\";\r\nimport { filterProps, getNamedFormat } from './utils';\r\nimport { IntlFormatError } from './error';\r\nvar DATE_TIME_FORMAT_OPTIONS = [\r\n    'formatMatcher',\r\n    'timeZone',\r\n    'hour12',\r\n    'weekday',\r\n    'era',\r\n    'year',\r\n    'month',\r\n    'day',\r\n    'hour',\r\n    'minute',\r\n    'second',\r\n    'timeZoneName',\r\n    'hourCycle',\r\n    'dateStyle',\r\n    'timeStyle',\r\n    'calendar',\r\n    // 'dayPeriod',\r\n    'numberingSystem',\r\n    'fractionalSecondDigits',\r\n];\r\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\r\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\r\n    if (options === void 0) { options = {}; }\r\n    var format = options.format;\r\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\r\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\r\n    if (type === 'time' &&\r\n        !filteredOptions.hour &&\r\n        !filteredOptions.minute &&\r\n        !filteredOptions.second &&\r\n        !filteredOptions.timeStyle &&\r\n        !filteredOptions.dateStyle) {\r\n        // Add default formatting options if hour, minute, or second isn't defined.\r\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\r\n    }\r\n    return getDateTimeFormat(locale, filteredOptions);\r\n}\r\nexport function formatDate(config, getDateTimeFormat) {\r\n    var _a = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        _a[_i - 2] = arguments[_i];\r\n    }\r\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\r\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\r\n    try {\r\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\r\n    }\r\n    return String(date);\r\n}\r\nexport function formatTime(config, getDateTimeFormat) {\r\n    var _a = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        _a[_i - 2] = arguments[_i];\r\n    }\r\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\r\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\r\n    try {\r\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\r\n    }\r\n    return String(date);\r\n}\r\nexport function formatDateTimeRange(config, getDateTimeFormat) {\r\n    var _a = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        _a[_i - 2] = arguments[_i];\r\n    }\r\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\r\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\r\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\r\n    try {\r\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\r\n    }\r\n    catch (e) {\r\n        onError(new IntlFormatError('Error formatting date time range.', config.locale, e));\r\n    }\r\n    return String(from);\r\n}\r\nexport function formatDateToParts(config, getDateTimeFormat) {\r\n    var _a = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        _a[_i - 2] = arguments[_i];\r\n    }\r\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\r\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\r\n    try {\r\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\r\n    }\r\n    return [];\r\n}\r\nexport function formatTimeToParts(config, getDateTimeFormat) {\r\n    var _a = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        _a[_i - 2] = arguments[_i];\r\n    }\r\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\r\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\r\n    try {\r\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\r\n    }\r\n    return [];\r\n}\r\n", "import { filterProps } from './utils';\r\nimport { FormatError, ErrorCode } from 'intl-messageformat';\r\nimport { IntlFormatError } from './error';\r\nvar DISPLAY_NAMES_OPTONS = [\r\n    'style',\r\n    'type',\r\n    'fallback',\r\n    'languageDisplay',\r\n];\r\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\r\n    var locale = _a.locale, onError = _a.onError;\r\n    var DisplayNames = Intl.DisplayNames;\r\n    if (!DisplayNames) {\r\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\r\n    }\r\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\r\n    try {\r\n        return getDisplayNames(locale, filteredOptions).of(value);\r\n    }\r\n    catch (e) {\r\n        onError(new IntlFormatError('Error formatting display name.', locale, e));\r\n    }\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport { filterProps } from './utils';\r\nimport { FormatError, ErrorCode } from 'intl-messageformat';\r\nimport { IntlFormatError } from './error';\r\nvar LIST_FORMAT_OPTIONS = [\r\n    'type',\r\n    'style',\r\n];\r\nvar now = Date.now();\r\nfunction generateToken(i) {\r\n    return \"\".concat(now, \"_\").concat(i, \"_\").concat(now);\r\n}\r\nexport function formatList(opts, getListFormat, values, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var results = formatListToParts(opts, getListFormat, values, options).reduce(function (all, el) {\r\n        var val = el.value;\r\n        if (typeof val !== 'string') {\r\n            all.push(val);\r\n        }\r\n        else if (typeof all[all.length - 1] === 'string') {\r\n            all[all.length - 1] += val;\r\n        }\r\n        else {\r\n            all.push(val);\r\n        }\r\n        return all;\r\n    }, []);\r\n    return results.length === 1 ? results[0] : results.length === 0 ? '' : results;\r\n}\r\nexport function formatListToParts(_a, getListFormat, values, options) {\r\n    var locale = _a.locale, onError = _a.onError;\r\n    if (options === void 0) { options = {}; }\r\n    var ListFormat = Intl.ListFormat;\r\n    if (!ListFormat) {\r\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\r\n    }\r\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\r\n    try {\r\n        var richValues_1 = {};\r\n        var serializedValues = values.map(function (v, i) {\r\n            if (typeof v === 'object') {\r\n                var id = generateToken(i);\r\n                richValues_1[id] = v;\r\n                return id;\r\n            }\r\n            return String(v);\r\n        });\r\n        return getListFormat(locale, filteredOptions)\r\n            .formatToParts(serializedValues)\r\n            .map(function (part) {\r\n            return part.type === 'literal'\r\n                ? part\r\n                : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });\r\n        });\r\n    }\r\n    catch (e) {\r\n        onError(new IntlFormatError('Error formatting list.', locale, e));\r\n    }\r\n    // @ts-ignore\r\n    return values;\r\n}\r\n", "import { filterProps } from './utils';\r\nimport { IntlFormatError } from './error';\r\nimport { ErrorCode, FormatError } from 'intl-messageformat';\r\nvar PLURAL_FORMAT_OPTIONS = ['type'];\r\nexport function formatPlural(_a, getPluralRules, value, options) {\r\n    var locale = _a.locale, onError = _a.onError;\r\n    if (options === void 0) { options = {}; }\r\n    if (!Intl.PluralRules) {\r\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\r\n    }\r\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\r\n    try {\r\n        return getPluralRules(locale, filteredOptions).select(value);\r\n    }\r\n    catch (e) {\r\n        onError(new IntlFormatError('Error formatting plural.', locale, e));\r\n    }\r\n    return 'other';\r\n}\r\n", "import { getNamedFormat, filterProps } from './utils';\r\nimport { FormatError, ErrorCode } from 'intl-messageformat';\r\nimport { IntlFormatError } from './error';\r\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\r\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\r\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\r\n    if (options === void 0) { options = {}; }\r\n    var format = options.format;\r\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\r\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\r\n    return getRelativeTimeFormat(locale, filteredOptions);\r\n}\r\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!unit) {\r\n        unit = 'second';\r\n    }\r\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\r\n    if (!RelativeTimeFormat) {\r\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\r\n    }\r\n    try {\r\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting relative time.', config.locale, e));\r\n    }\r\n    return String(value);\r\n}\r\n", "import { IntlFormatError } from './error';\r\nimport { filterProps, getNamedFormat } from './utils';\r\nvar NUMBER_FORMAT_OPTIONS = [\r\n    'style',\r\n    'currency',\r\n    'unit',\r\n    'unitDisplay',\r\n    'useGrouping',\r\n    'minimumIntegerDigits',\r\n    'minimumFractionDigits',\r\n    'maximumFractionDigits',\r\n    'minimumSignificantDigits',\r\n    'maximumSignificantDigits',\r\n    // ES2020 NumberFormat\r\n    'compactDisplay',\r\n    'currencyDisplay',\r\n    'currencySign',\r\n    'notation',\r\n    'signDisplay',\r\n    'unit',\r\n    'unitDisplay',\r\n    'numberingSystem',\r\n    // ES2023 NumberFormat\r\n    'trailingZeroDisplay',\r\n    'roundingPriority',\r\n    'roundingIncrement',\r\n    'roundingMode',\r\n];\r\nexport function getFormatter(_a, getNumberFormat, options) {\r\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\r\n    if (options === void 0) { options = {}; }\r\n    var format = options.format;\r\n    var defaults = ((format &&\r\n        getNamedFormat(formats, 'number', format, onError)) ||\r\n        {});\r\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\r\n    return getNumberFormat(locale, filteredOptions);\r\n}\r\nexport function formatNumber(config, getNumberFormat, value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    try {\r\n        return getFormatter(config, getNumberFormat, options).format(value);\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\r\n    }\r\n    return String(value);\r\n}\r\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    try {\r\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\r\n    }\r\n    catch (e) {\r\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\r\n    }\r\n    return [];\r\n}\r\n", "import { __assign } from \"tslib\";\r\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\r\nimport { InvalidConfigError, MissingDataError } from './error';\r\nimport { formatNumber, formatNumberToParts } from './number';\r\nimport { formatRelativeTime } from './relativeTime';\r\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, formatDateTimeRange, } from './dateTime';\r\nimport { formatPlural } from './plural';\r\nimport { formatMessage } from './message';\r\nimport { formatList, formatListToParts } from './list';\r\nimport { formatDisplayName } from './displayName';\r\nfunction messagesContainString(messages) {\r\n    var firstMessage = messages ? messages[Object.keys(messages)[0]] : undefined;\r\n    return typeof firstMessage === 'string';\r\n}\r\nfunction verifyConfigMessages(config) {\r\n    if (config.onWarn &&\r\n        config.defaultRichTextElements &&\r\n        messagesContainString(config.messages || {})) {\r\n        config.onWarn(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\r\n    }\r\n}\r\n/**\r\n * Create intl object\r\n * @param config intl config\r\n * @param cache cache for formatter instances to prevent memory leak\r\n */\r\nexport function createIntl(config, cache) {\r\n    var formatters = createFormatters(cache);\r\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\r\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\r\n    if (!locale) {\r\n        if (onError) {\r\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\".concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\")));\r\n        }\r\n        // Since there's no registered locale data for `locale`, this will\r\n        // fallback to the `defaultLocale` to make sure things can render.\r\n        // The `messages` are overridden to the `defaultProps` empty object\r\n        // to maintain referential equality across re-renders. It's assumed\r\n        // each <FormattedMessage> contains a `defaultMessage` prop.\r\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\r\n    }\r\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\r\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.NumberFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\r\n    }\r\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\r\n        onError) {\r\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\r\n    }\r\n    verifyConfigMessages(resolvedConfig);\r\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), \r\n        // @ts-expect-error TODO: will get to this later\r\n        formatMessage: formatMessage.bind(null, resolvedConfig, formatters), \r\n        // @ts-expect-error TODO: will get to this later\r\n        $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\r\n}\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { createIntlCache } from '@formatjs/intl';\r\nimport * as React from 'react';\r\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, shallowEqual } from '../utils';\r\nimport { Provider } from './injectIntl';\r\nimport { createIntl } from './createIntl';\r\nfunction processIntlConfig(config) {\r\n    return {\r\n        locale: config.locale,\r\n        timeZone: config.timeZone,\r\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\r\n        formats: config.formats,\r\n        textComponent: config.textComponent,\r\n        messages: config.messages,\r\n        defaultLocale: config.defaultLocale,\r\n        defaultFormats: config.defaultFormats,\r\n        onError: config.onError,\r\n        onWarn: config.onWarn,\r\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\r\n        defaultRichTextElements: config.defaultRichTextElements,\r\n    };\r\n}\r\nvar IntlProvider = /** @class */ (function (_super) {\r\n    __extends(IntlProvider, _super);\r\n    function IntlProvider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cache = createIntlCache();\r\n        _this.state = {\r\n            cache: _this.cache,\r\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\r\n            prevConfig: processIntlConfig(_this.props),\r\n        };\r\n        return _this;\r\n    }\r\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\r\n        var prevConfig = _a.prevConfig, cache = _a.cache;\r\n        var config = processIntlConfig(props);\r\n        if (!shallowEqual(prevConfig, config)) {\r\n            return {\r\n                intl: createIntl(config, cache),\r\n                prevConfig: config,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    IntlProvider.prototype.render = function () {\r\n        invariantIntlContext(this.state.intl);\r\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\r\n    };\r\n    IntlProvider.displayName = 'IntlProvider';\r\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\r\n    return IntlProvider;\r\n}(React.PureComponent));\r\nexport default IntlProvider;\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __assign, __rest, __spreadArray } from \"tslib\";\r\nimport { createIntl as coreCreateIntl, formatMessage as coreFormatMessage, } from '@formatjs/intl';\r\nimport * as React from 'react';\r\nimport { DEFAULT_INTL_CONFIG, assignUniqueKeysToParts } from '../utils';\r\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\r\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\r\n    if (!values) {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (acc, k) {\r\n        var v = values[k];\r\n        acc[k] = isFormatXMLElementFn(v)\r\n            ? assignUniqueKeysToParts(v)\r\n            : v;\r\n        return acc;\r\n    }, {});\r\n}\r\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\r\n    var rest = [];\r\n    for (var _i = 4; _i < arguments.length; _i++) {\r\n        rest[_i - 4] = arguments[_i];\r\n    }\r\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\r\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\r\n        formatters,\r\n        descriptor,\r\n        values], rest, false));\r\n    if (Array.isArray(chunks)) {\r\n        return React.Children.toArray(chunks);\r\n    }\r\n    return chunks;\r\n};\r\n/**\r\n * Create intl object\r\n * @param config intl config\r\n * @param cache cache for formatter instances to prevent memory leak\r\n */\r\nexport var createIntl = function (_a, cache) {\r\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\r\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\r\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\r\n    var resolvedConfig = {\r\n        locale: coreIntl.locale,\r\n        timeZone: coreIntl.timeZone,\r\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\r\n        formats: coreIntl.formats,\r\n        defaultLocale: coreIntl.defaultLocale,\r\n        defaultFormats: coreIntl.defaultFormats,\r\n        messages: coreIntl.messages,\r\n        onError: coreIntl.onError,\r\n        defaultRichTextElements: defaultRichTextElements,\r\n    };\r\n    return __assign(__assign({}, coreIntl), { formatMessage: formatMessage.bind(null, resolvedConfig, \r\n        // @ts-expect-error fix this\r\n        coreIntl.formatters), \r\n        // @ts-expect-error fix this\r\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\r\n};\r\n", "import { __assign, __rest } from \"tslib\";\r\n/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport * as React from 'react';\r\nimport { invariant, } from '@formatjs/ecma402-abstract';\r\nimport useIntl from './useIntl';\r\nvar MINUTE = 60;\r\nvar HOUR = 60 * 60;\r\nvar DAY = 60 * 60 * 24;\r\nfunction selectUnit(seconds) {\r\n    var absValue = Math.abs(seconds);\r\n    if (absValue < MINUTE) {\r\n        return 'second';\r\n    }\r\n    if (absValue < HOUR) {\r\n        return 'minute';\r\n    }\r\n    if (absValue < DAY) {\r\n        return 'hour';\r\n    }\r\n    return 'day';\r\n}\r\nfunction getDurationInSeconds(unit) {\r\n    switch (unit) {\r\n        case 'second':\r\n            return 1;\r\n        case 'minute':\r\n            return MINUTE;\r\n        case 'hour':\r\n            return HOUR;\r\n        default:\r\n            return DAY;\r\n    }\r\n}\r\nfunction valueToSeconds(value, unit) {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    switch (unit) {\r\n        case 'second':\r\n            return value;\r\n        case 'minute':\r\n            return value * MINUTE;\r\n        default:\r\n            return value * HOUR;\r\n    }\r\n}\r\nvar INCREMENTABLE_UNITS = [\r\n    'second',\r\n    'minute',\r\n    'hour',\r\n];\r\nfunction canIncrement(unit) {\r\n    if (unit === void 0) { unit = 'second'; }\r\n    return INCREMENTABLE_UNITS.indexOf(unit) > -1;\r\n}\r\nvar SimpleFormattedRelativeTime = function (props) {\r\n    var _a = useIntl(), formatRelativeTime = _a.formatRelativeTime, Text = _a.textComponent;\r\n    var children = props.children, value = props.value, unit = props.unit, otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\r\n    var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\r\n    if (typeof children === 'function') {\r\n        return children(formattedRelativeTime);\r\n    }\r\n    if (Text) {\r\n        return React.createElement(Text, null, formattedRelativeTime);\r\n    }\r\n    return React.createElement(React.Fragment, null, formattedRelativeTime);\r\n};\r\nvar FormattedRelativeTime = function (_a) {\r\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.unit, unit = _c === void 0 ? 'second' : _c, updateIntervalInSeconds = _a.updateIntervalInSeconds, otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\r\n    invariant(!updateIntervalInSeconds ||\r\n        !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\r\n    var _d = React.useState(), prevUnit = _d[0], setPrevUnit = _d[1];\r\n    var _e = React.useState(0), prevValue = _e[0], setPrevValue = _e[1];\r\n    var _f = React.useState(0), currentValueInSeconds = _f[0], setCurrentValueInSeconds = _f[1];\r\n    var updateTimer;\r\n    if (unit !== prevUnit || value !== prevValue) {\r\n        setPrevValue(value || 0);\r\n        setPrevUnit(unit);\r\n        setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\r\n    }\r\n    React.useEffect(function () {\r\n        function clearUpdateTimer() {\r\n            clearTimeout(updateTimer);\r\n        }\r\n        clearUpdateTimer();\r\n        // If there's no interval and we cannot increment this unit, do nothing\r\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\r\n            return clearUpdateTimer;\r\n        }\r\n        // Figure out the next interesting time\r\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\r\n        var nextUnit = selectUnit(nextValueInSeconds);\r\n        // We've reached the max auto incrementable unit, don't schedule another update\r\n        if (nextUnit === 'day') {\r\n            return clearUpdateTimer;\r\n        }\r\n        var unitDuration = getDurationInSeconds(nextUnit);\r\n        var remainder = nextValueInSeconds % unitDuration;\r\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\r\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\r\n            ? prevInterestingValueInSeconds - unitDuration\r\n            : prevInterestingValueInSeconds;\r\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\r\n        if (currentValueInSeconds !== nextInterestingValueInSeconds) {\r\n            updateTimer = setTimeout(function () { return setCurrentValueInSeconds(nextInterestingValueInSeconds); }, delayInSeconds * 1e3);\r\n        }\r\n        return clearUpdateTimer;\r\n    }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\r\n    var currentValue = value || 0;\r\n    var currentUnit = unit;\r\n    if (canIncrement(unit) &&\r\n        typeof currentValueInSeconds === 'number' &&\r\n        updateIntervalInSeconds) {\r\n        currentUnit = selectUnit(currentValueInSeconds);\r\n        var unitDuration = getDurationInSeconds(currentUnit);\r\n        currentValue = Math.round(currentValueInSeconds / unitDuration);\r\n    }\r\n    return (React.createElement(SimpleFormattedRelativeTime, __assign({ value: currentValue, unit: currentUnit }, otherProps)));\r\n};\r\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\r\nexport default FormattedRelativeTime;\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nvar FormattedPlural = function (props) {\r\n    var _a = useIntl(), formatPlural = _a.formatPlural, Text = _a.textComponent;\r\n    var value = props.value, other = props.other, children = props.children;\r\n    var pluralCategory = formatPlural(value, props);\r\n    var formattedPlural = props[pluralCategory] || other;\r\n    if (typeof children === 'function') {\r\n        return children(formattedPlural);\r\n    }\r\n    if (Text) {\r\n        return React.createElement(Text, null, formattedPlural);\r\n    }\r\n    // Work around @types/react where React.FC cannot return string\r\n    return formattedPlural;\r\n};\r\nFormattedPlural.displayName = 'FormattedPlural';\r\nexport default FormattedPlural;\r\n", "/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nimport { shallowEqual } from '../utils';\r\nfunction areEqual(prevProps, nextProps) {\r\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\r\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\r\n    return (shallowEqual(nextValues, values) &&\r\n        shallowEqual(otherProps, nextOtherProps));\r\n}\r\nfunction FormattedMessage(props) {\r\n    var intl = useIntl();\r\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\r\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\r\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\r\n    var nodes = formatMessage(descriptor, values, {\r\n        ignoreTag: ignoreTag,\r\n    });\r\n    if (typeof children === 'function') {\r\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\r\n    }\r\n    if (Component) {\r\n        return React.createElement(Component, null, React.Children.toArray(nodes));\r\n    }\r\n    return React.createElement(React.Fragment, null, nodes);\r\n}\r\nFormattedMessage.displayName = 'FormattedMessage';\r\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\r\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\r\nexport default MemoizedFormattedMessage;\r\n", "import { __rest } from \"tslib\";\r\nimport * as React from 'react';\r\nimport useIntl from './useIntl';\r\nvar FormattedDateTimeRange = function (props) {\r\n    var intl = useIntl();\r\n    var from = props.from, to = props.to, children = props.children, formatProps = __rest(props, [\"from\", \"to\", \"children\"]);\r\n    var formattedValue = intl.formatDateTimeRange(from, to, formatProps);\r\n    if (typeof children === 'function') {\r\n        return children(formattedValue);\r\n    }\r\n    var Text = intl.textComponent || React.Fragment;\r\n    return React.createElement(Text, null, formattedValue);\r\n};\r\nFormattedDateTimeRange.displayName = 'FormattedDateTimeRange';\r\nexport default FormattedDateTimeRange;\r\n", "import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\r\nimport injectIntl, { Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\r\nimport useIntl from './src/components/useIntl';\r\nimport IntlProvider from './src/components/provider';\r\nimport { createIntl } from './src/components/createIntl';\r\nimport FormattedRelativeTime from './src/components/relative';\r\nimport FormattedPlural from './src/components/plural';\r\nimport FormattedMessage from './src/components/message';\r\nimport FormattedDateTimeRange from './src/components/dateTimeRange';\r\nexport { FormattedDateTimeRange, FormattedMessage, FormattedPlural, FormattedRelativeTime, IntlContext, IntlProvider, RawIntlProvider, createIntl, injectIntl, useIntl, };\r\nexport { createIntlCache, UnsupportedFormatterError, InvalidConfigError, MissingDataError, MessageFormatError, MissingTranslationError, IntlErrorCode as ReactIntlErrorCode, IntlError as ReactIntlError, } from '@formatjs/intl';\r\nexport function defineMessages(msgs) {\r\n    return msgs;\r\n}\r\nexport function defineMessage(msg) {\r\n    return msg;\r\n}\r\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\r\nexport var FormattedDate = createFormattedComponent('formatDate');\r\nexport var FormattedTime = createFormattedComponent('formatTime');\r\nexport var FormattedNumber = createFormattedComponent('formatNumber');\r\nexport var FormattedList = createFormattedComponent('formatList');\r\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\r\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\r\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\r\nexport { FormattedNumberParts, FormattedListParts, } from './src/components/createFormattedComponent';\r\n"],
  "mappings": "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",
  "names": ["React", "React", "React", "ErrorKind", "TYPE", "SKELETON_TYPE", "_a", "opt", "startsWith", "fromCodePoint", "fromEntries", "_a", "codePointAt", "trimStart", "trimEnd", "matchIdentifierAtIndex", "Parser", "ErrorCode", "FormatError", "InvalidValueError", "InvalidValueTypeError", "MissingValueError", "PART_TYPE", "_a", "IntlMessageFormat", "IntlErrorCode", "IntlError", "UnsupportedFormatterError", "InvalidConfigError", "MissingDataError", "IntlFormatError", "MessageFormatError", "MissingTranslationError", "_a", "createFastMemoizeCache", "_a", "_a", "_a", "_a", "_a", "_a", "getFormatter", "_a", "getFormatter", "_a", "DEFAULT_INTL_CONFIG", "_a", "forwardRef", "hoistNonReactStatics", "DisplayName", "DisplayNameParts", "React", "React", "formatMessage", "createIntl", "_a", "DEFAULT_INTL_CONFIG", "IntlProvider", "createIntl", "_a", "DEFAULT_INTL_CONFIG", "React", "_a", "formatRelativeTime", "unitDuration", "React", "_a", "formatPlural", "React", "formatMessage", "_a", "React"]
}
